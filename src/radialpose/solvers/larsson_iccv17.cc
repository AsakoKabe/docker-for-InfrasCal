#include <Eigen/Dense>
#include <Eigen/Geometry>
#include <complex>
#include "larsson_iccv17.h"
#include "../misc/univariate.h"

static const double SMALL_NUMBER = 1e-8;

static const int coeffs0_ind[] = { 0,20,40,60,100,140,180,220,1,0,20,21,40,41,50,61,101,141,181,221,2,1,21,22,41,42,51,62,102,142,182,222,2,22,42,52,63,103,143,183,223,3,23,20,0,40,43,50,64,104,144,184,224,4,3,23,24,21,1,41,43,44,51,53,65,105,145,185,225,5,25,23,3,43,45,53,67,107,147,187,227,5,25,24,4,44,45,54,55,68,108,148,188,228,25,5,45,55,69,109,149,189,229,6,26,40,50,70,110,150,190,230,9,29,26,6,43,40,50,53,74,114,154,194,234,10,9,29,30,27,7,44,41,43,51,53,54,75,115,155,195,235,11,31,29,9,45,43,53,55,77,117,157,197,237,11,31,30,10,44,45,54,55,78,118,158,198,238,31,11,45,55,79,119,159,199,239,12,32,46,50,20,0,40,80,120,160,200,240,13,33,47,52,22,2,42,57,82,122,162,202,242,14,34,32,12,46,48,56,53,23,3,43,83,123,163,203,243,34,14,48,58,55,25,5,45,85,125,165,205,245,17,37,35,15,48,46,56,29,9,43,53,58,89,129,169,209,249,37,17,48,58,31,11,45,55,91,131,171,211,251,7,6,26,27,41,40,50,51,71,111,151,191,231,8,7,27,28,42,41,51,52,72,112,152,192,232,4,24,22,2,42,44,52,54,66,106,146,186,226,8,28,42,52,73,113,153,193,233,10,30,28,8,42,44,52,54,76,116,156,196,236,13,12,32,33,46,47,51,21,1,41,56,81,121,161,201,241,18,38,49,57,33,13,47,59,93,133,173,213,253 };
static const int coeffs1_ind[] = { 14,34,33,13,47,48,57,54,24,4,44,58,84,124,164,204,244,15,35,46,26,6,40,50,56,86,126,166,206,246,16,15,35,36,47,46,56,27,7,41,51,57,87,127,167,207,247,16,36,47,57,28,8,42,52,88,128,168,208,248,17,37,36,16,47,48,57,58,30,10,44,54,90,130,170,210,250,18,38,49,56,32,12,46,92,132,172,212,252,38,18,49,59,58,34,14,48,94,134,174,214,254,19,39,49,35,15,46,56,59,95,135,175,215,255,19,39,49,59,36,16,47,57,96,136,176,216,256,39,19,49,59,37,17,48,58,97,137,177,217,257,59,38,18,49,98,138,178,218,258,39,19,49,59,99,139,179,219,259 };
static const int C0_ind[] = { 0,3,8,23,24,25,26,27,28,29,30,31,35,36,49,51,52,53,54,55,56,57,58,59,63,64,77,79,80,81,82,83,85,86,91,105,107,108,109,110,111,112,115,116,117,118,120,125,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,161,163,164,165,166,167,168,171,172,173,174,176,181,191,192,193,194,195,197,198,200,201,202,203,209,217,219,220,221,222,223,228,229,230,237,247,248,249,250,251,252,255,261,274,275,276,277,278,279,280,283,284,285,289,290,292,302,303,304,305,306,307,308,309,310,311,312,313,317,318,319,320,322,330,331,332,333,334,335,336,339,340,341,345,346,348,358,359,360,361,362,363,365,366,368,369,374,375,376,378,387,388,389,390,391,396,397,402,404,415,416,417,418,419,420,423,428,435,436,437,438,443,444,445,446,447,449,450,455,463,464,465,466,469,471,472,473,474,475,476,479,480,481,482,484,489,491,492,493,494,499,500,501,502,503,508,509,510,517,519,520,521,522,527,528,529,530,531,532,535,536,537,541,542,544,548,549,551,552,554,555,556,557,558,559,564,565,570,572,576,577,579,580,583,584,585,586,587,588,589,590,591,597,599,602,610,611,612,613,614,615,616,617,618,619,625,627,630,638,639,640,641,642,643,645,646,648,649,650,651,657,665,667,668,669,670,671,673,674,683,686,695,696,697,698,699,701,702,704,705,710,711,712,714,723,724,725,726,727,728,729,730,731,735,736,743,744,745,746,749,751,752,753,754,755,757,758,763,771,772,773,774,777,779,780,781,782,783 };
static const int C1_ind[] = { 1,2,4,5,6,7,13,15,16,17,18,21,23,24,25,26,27,28,31,37,44,45,47,48,50,51,52,53,54,55,56,57,58,59,65,67,70,72,73,75,76,78,79,80,81,82,83,85,86,95,98,100,101,103,104,107,108,109,110,111,113,114,116,117,122,123,124,126,128,129,131,132,135,136,137,138,139,140,143,148,155,156,157,158,163,164,165,166,167,172,173,174,181,183,184,185,186,191,192,193,194,195,196,199,205,212,213,215,216,218,219,220,221,222,223,225,226,235,238,240,241,243,244,247,248,249,250,251,256,257,262,264,268,269,271,272,275,276,277,278,279,295,296,297,298,303,304,305,306,307,324,325,327,328,331,332,333,334,335 };
static const int AM_ind[] = { 2,0,1,3,4,5,7,9,10,11,6,15 };


int radialpose::larsson_iccv17::NonPlanarSolver::solve(const Points2D &x, const Points3D &X, std::vector<Camera> *poses) const {
	double d[64];

	// Setup nullspace 
	Eigen::Matrix<double, 8, 4> M;	
	Eigen::Matrix<double, 4, 4> A;
	Eigen::Map<Eigen::Matrix<double, 8, 4>> N(d);
	Eigen::Map<Eigen::Matrix<double, 4, 8>> B(d+32);

	for (int i = 0; i < 4; i++) {
		M(0, i) = -x(1, i) * X(0, i);
		M(2, i) = -x(1, i) * X(1, i);
		M(4, i) = -x(1, i) * X(2, i);
		M(6, i) = -x(1, i);
		M(1, i) = x(0, i) * X(0, i);
		M(3, i) = x(0, i) * X(1, i);
		M(5, i) = x(0, i) * X(2, i);
		M(7, i) = x(0, i);
	}

	// Compute nullspace using QR
	Eigen::Matrix<double, 8, 8> Q = M.householderQr().householderQ();
	N = Q.rightCols(4);

	// Setup matrices A and B (see paper for definition)
	for (int i = 0; i < 4; ++i) {
		double d2 = x.col(i).squaredNorm();

		if (std::abs(x(0, i)) < SMALL_NUMBER) {
			A(i, 0) = x(1, i) * X(0, i);
			A(i, 1) = x(1, i) * X(1, i);
			A(i, 2) = x(1, i) * X(2, i);
			A(i, 3) = x(1, i);

			B(i, 0) = X(0, i) * N(1, 0) + X(1, i) * N(3, 0) + X(2, i) * N(5, 0) + N(7, 0); // alpha1
			B(i, 1) = X(0, i) * N(1, 1) + X(1, i) * N(3, 1) + X(2, i) * N(5, 1) + N(7, 1); // alpha2
			B(i, 2) = X(0, i) * N(1, 2) + X(1, i) * N(3, 2) + X(2, i) * N(5, 2) + N(7, 2); // alpha3
			B(i, 7) = X(0, i) * N(1, 3) + X(1, i) * N(3, 3) + X(2, i) * N(5, 3) + N(7, 3); // 1			
		} else {
			A(i, 0) = x(0, i) * X(0, i);
			A(i, 1) = x(0, i) * X(1, i);
			A(i, 2) = x(0, i) * X(2, i);
			A(i, 3) = x(0, i);
			
			B(i, 0) = X(0, i) * N(0, 0) + X(1, i) * N(2, 0) + X(2, i) * N(4, 0) + N(6, 0); // alpha1
			B(i, 1) = X(0, i) * N(0, 1) + X(1, i) * N(2, 1) + X(2, i) * N(4, 1) + N(6, 1); // alpha2
			B(i, 2) = X(0, i) * N(0, 2) + X(1, i) * N(2, 2) + X(2, i) * N(4, 2) + N(6, 2); // alpha3
			B(i, 7) = X(0, i) * N(0, 3) + X(1, i) * N(2, 3) + X(2, i) * N(4, 3) + N(6, 3); // 1			
		}
		B(i, 3) = d2 * B(i, 0); // k*alpha1
		B(i, 4) = d2 * B(i, 1); // k*alpha2
		B(i, 5) = d2 * B(i, 2); // k*alpha3
		B(i, 6) = d2 * B(i, 7); // 
	}
	
	// [p31,p32,p33,p34] = B * [alpha; lambda*alpha; lambda; 1]
	B = A.partialPivLu().solve(B);
	
	// Compute coefficients in the template
	double coeffs[260];
	coeffs[0] = d[1] * d[44] + d[3] * d[45] + d[5] * d[46];
	coeffs[1] = d[9] * d[44] + d[11] * d[45] + d[13] * d[46] + d[1] * d[48] + d[3] * d[49] + d[5] * d[50];
	coeffs[2] = d[9] * d[48] + d[11] * d[49] + d[13] * d[50];
	coeffs[3] = d[17] * d[44] + d[19] * d[45] + d[21] * d[46] + d[1] * d[52] + d[3] * d[53] + d[5] * d[54];
	coeffs[4] = d[17] * d[48] + d[19] * d[49] + d[21] * d[50] + d[9] * d[52] + d[11] * d[53] + d[13] * d[54];
	coeffs[5] = d[17] * d[52] + d[19] * d[53] + d[21] * d[54];
	coeffs[6] = d[1] * d[32] + d[3] * d[33] + d[5] * d[34];
	coeffs[7] = d[9] * d[32] + d[11] * d[33] + d[13] * d[34] + d[1] * d[36] + d[3] * d[37] + d[5] * d[38];
	coeffs[8] = d[9] * d[36] + d[11] * d[37] + d[13] * d[38];
	coeffs[9] = d[17] * d[32] + d[19] * d[33] + d[21] * d[34] + d[1] * d[40] + d[3] * d[41] + d[5] * d[42];
	coeffs[10] = d[17] * d[36] + d[19] * d[37] + d[21] * d[38] + d[9] * d[40] + d[11] * d[41] + d[13] * d[42];
	coeffs[11] = d[17] * d[40] + d[19] * d[41] + d[21] * d[42];
	coeffs[12] = d[25] * d[44] + d[27] * d[45] + d[29] * d[46] + d[1] * d[56] + d[3] * d[57] + d[5] * d[58];
	coeffs[13] = d[25] * d[48] + d[27] * d[49] + d[29] * d[50] + d[9] * d[56] + d[11] * d[57] + d[13] * d[58];
	coeffs[14] = d[25] * d[52] + d[27] * d[53] + d[29] * d[54] + d[17] * d[56] + d[19] * d[57] + d[21] * d[58];
	coeffs[15] = d[25] * d[32] + d[27] * d[33] + d[29] * d[34] + d[1] * d[60] + d[3] * d[61] + d[5] * d[62];
	coeffs[16] = d[25] * d[36] + d[27] * d[37] + d[29] * d[38] + d[9] * d[60] + d[11] * d[61] + d[13] * d[62];
	coeffs[17] = d[25] * d[40] + d[27] * d[41] + d[29] * d[42] + d[17] * d[60] + d[19] * d[61] + d[21] * d[62];
	coeffs[18] = d[25] * d[56] + d[27] * d[57] + d[29] * d[58];
	coeffs[19] = d[25] * d[60] + d[27] * d[61] + d[29] * d[62];
	coeffs[20] = d[0] * d[44] + d[2] * d[45] + d[4] * d[46];
	coeffs[21] = d[8] * d[44] + d[10] * d[45] + d[12] * d[46] + d[0] * d[48] + d[2] * d[49] + d[4] * d[50];
	coeffs[22] = d[8] * d[48] + d[10] * d[49] + d[12] * d[50];
	coeffs[23] = d[16] * d[44] + d[18] * d[45] + d[20] * d[46] + d[0] * d[52] + d[2] * d[53] + d[4] * d[54];
	coeffs[24] = d[16] * d[48] + d[18] * d[49] + d[20] * d[50] + d[8] * d[52] + d[10] * d[53] + d[12] * d[54];
	coeffs[25] = d[16] * d[52] + d[18] * d[53] + d[20] * d[54];
	coeffs[26] = d[0] * d[32] + d[2] * d[33] + d[4] * d[34];
	coeffs[27] = d[8] * d[32] + d[10] * d[33] + d[12] * d[34] + d[0] * d[36] + d[2] * d[37] + d[4] * d[38];
	coeffs[28] = d[8] * d[36] + d[10] * d[37] + d[12] * d[38];
	coeffs[29] = d[16] * d[32] + d[18] * d[33] + d[20] * d[34] + d[0] * d[40] + d[2] * d[41] + d[4] * d[42];
	coeffs[30] = d[16] * d[36] + d[18] * d[37] + d[20] * d[38] + d[8] * d[40] + d[10] * d[41] + d[12] * d[42];
	coeffs[31] = d[16] * d[40] + d[18] * d[41] + d[20] * d[42];
	coeffs[32] = d[24] * d[44] + d[26] * d[45] + d[28] * d[46] + d[0] * d[56] + d[2] * d[57] + d[4] * d[58];
	coeffs[33] = d[24] * d[48] + d[26] * d[49] + d[28] * d[50] + d[8] * d[56] + d[10] * d[57] + d[12] * d[58];
	coeffs[34] = d[24] * d[52] + d[26] * d[53] + d[28] * d[54] + d[16] * d[56] + d[18] * d[57] + d[20] * d[58];
	coeffs[35] = d[24] * d[32] + d[26] * d[33] + d[28] * d[34] + d[0] * d[60] + d[2] * d[61] + d[4] * d[62];
	coeffs[36] = d[24] * d[36] + d[26] * d[37] + d[28] * d[38] + d[8] * d[60] + d[10] * d[61] + d[12] * d[62];
	coeffs[37] = d[24] * d[40] + d[26] * d[41] + d[28] * d[42] + d[16] * d[60] + d[18] * d[61] + d[20] * d[62];
	coeffs[38] = d[24] * d[56] + d[26] * d[57] + d[28] * d[58];
	coeffs[39] = d[24] * d[60] + d[26] * d[61] + d[28] * d[62];
	coeffs[40] = d[0] * d[1] + d[2] * d[3] + d[4] * d[5];
	coeffs[41] = d[1] * d[8] + d[0] * d[9] + d[3] * d[10] + d[2] * d[11] + d[5] * d[12] + d[4] * d[13];
	coeffs[42] = d[8] * d[9] + d[10] * d[11] + d[12] * d[13];
	coeffs[43] = d[1] * d[16] + d[0] * d[17] + d[3] * d[18] + d[2] * d[19] + d[5] * d[20] + d[4] * d[21];
	coeffs[44] = d[9] * d[16] + d[8] * d[17] + d[11] * d[18] + d[10] * d[19] + d[13] * d[20] + d[12] * d[21];
	coeffs[45] = d[16] * d[17] + d[18] * d[19] + d[20] * d[21];
	coeffs[46] = d[1] * d[24] + d[0] * d[25] + d[3] * d[26] + d[2] * d[27] + d[5] * d[28] + d[4] * d[29];
	coeffs[47] = d[9] * d[24] + d[8] * d[25] + d[11] * d[26] + d[10] * d[27] + d[13] * d[28] + d[12] * d[29];
	coeffs[48] = d[17] * d[24] + d[16] * d[25] + d[19] * d[26] + d[18] * d[27] + d[21] * d[28] + d[20] * d[29];
	coeffs[49] = d[24] * d[25] + d[26] * d[27] + d[28] * d[29];
	coeffs[50] = std::pow(d[0], 2) - std::pow(d[1], 2) + std::pow(d[2], 2) - std::pow(d[3], 2) + std::pow(d[4], 2) - std::pow(d[5], 2);
	coeffs[51] = 2 * d[0] * d[8] - 2 * d[1] * d[9] + 2 * d[2] * d[10] - 2 * d[3] * d[11] + 2 * d[4] * d[12] - 2 * d[5] * d[13];
	coeffs[52] = std::pow(d[8], 2) - std::pow(d[9], 2) + std::pow(d[10], 2) - std::pow(d[11], 2) + std::pow(d[12], 2) - std::pow(d[13], 2);
	coeffs[53] = 2 * d[0] * d[16] - 2 * d[1] * d[17] + 2 * d[2] * d[18] - 2 * d[3] * d[19] + 2 * d[4] * d[20] - 2 * d[5] * d[21];
	coeffs[54] = 2 * d[8] * d[16] - 2 * d[9] * d[17] + 2 * d[10] * d[18] - 2 * d[11] * d[19] + 2 * d[12] * d[20] - 2 * d[13] * d[21];
	coeffs[55] = std::pow(d[16], 2) - std::pow(d[17], 2) + std::pow(d[18], 2) - std::pow(d[19], 2) + std::pow(d[20], 2) - std::pow(d[21], 2);
	coeffs[56] = 2 * d[0] * d[24] - 2 * d[1] * d[25] + 2 * d[2] * d[26] - 2 * d[3] * d[27] + 2 * d[4] * d[28] - 2 * d[5] * d[29];
	coeffs[57] = 2 * d[8] * d[24] - 2 * d[9] * d[25] + 2 * d[10] * d[26] - 2 * d[11] * d[27] + 2 * d[12] * d[28] - 2 * d[13] * d[29];
	coeffs[58] = 2 * d[16] * d[24] - 2 * d[17] * d[25] + 2 * d[18] * d[26] - 2 * d[19] * d[27] + 2 * d[20] * d[28] - 2 * d[21] * d[29];
	coeffs[59] = std::pow(d[24], 2) - std::pow(d[25], 2) + std::pow(d[26], 2) - std::pow(d[27], 2) + std::pow(d[28], 2) - std::pow(d[29], 2);
	coeffs[60] = -std::pow(d[1], 2) * d[45] - std::pow(d[3], 2) * d[45] + std::pow(d[4], 2) * d[45] - d[2] * d[4] * d[46] - d[3] * d[5] * d[46];
	coeffs[61] = -2 * d[1] * d[9] * d[45] - 2 * d[3] * d[11] * d[45] + 2 * d[4] * d[12] * d[45] - d[4] * d[10] * d[46] - d[5] * d[11] * d[46] - d[2] * d[12] * d[46] - d[3] * d[13] * d[46] - std::pow(d[1], 2) * d[49] - std::pow(d[3], 2) * d[49] + std::pow(d[4], 2) * d[49] - d[2] * d[4] * d[50] - d[3] * d[5] * d[50];
	coeffs[62] = -std::pow(d[9], 2) * d[45] - std::pow(d[11], 2) * d[45] + std::pow(d[12], 2) * d[45] - d[10] * d[12] * d[46] - d[11] * d[13] * d[46] - 2 * d[1] * d[9] * d[49] - 2 * d[3] * d[11] * d[49] + 2 * d[4] * d[12] * d[49] - d[4] * d[10] * d[50] - d[5] * d[11] * d[50] - d[2] * d[12] * d[50] - d[3] * d[13] * d[50];
	coeffs[63] = -std::pow(d[9], 2) * d[49] - std::pow(d[11], 2) * d[49] + std::pow(d[12], 2) * d[49] - d[10] * d[12] * d[50] - d[11] * d[13] * d[50];
	coeffs[64] = -2 * d[1] * d[17] * d[45] - 2 * d[3] * d[19] * d[45] + 2 * d[4] * d[20] * d[45] - d[4] * d[18] * d[46] - d[5] * d[19] * d[46] - d[2] * d[20] * d[46] - d[3] * d[21] * d[46] - std::pow(d[1], 2) * d[53] - std::pow(d[3], 2) * d[53] + std::pow(d[4], 2) * d[53] - d[2] * d[4] * d[54] - d[3] * d[5] * d[54];
	coeffs[65] = -2 * d[9] * d[17] * d[45] - 2 * d[11] * d[19] * d[45] + 2 * d[12] * d[20] * d[45] - d[12] * d[18] * d[46] - d[13] * d[19] * d[46] - d[10] * d[20] * d[46] - d[11] * d[21] * d[46] - 2 * d[1] * d[17] * d[49] - 2 * d[3] * d[19] * d[49] + 2 * d[4] * d[20] * d[49] - d[4] * d[18] * d[50] - d[5] * d[19] * d[50] - d[2] * d[20] * d[50] - d[3] * d[21] * d[50] - 2 * d[1] * d[9] * d[53] - 2 * d[3] * d[11] * d[53] + 2 * d[4] * d[12] * d[53] - d[4] * d[10] * d[54] - d[5] * d[11] * d[54] - d[2] * d[12] * d[54] - d[3] * d[13] * d[54];
	coeffs[66] = -2 * d[9] * d[17] * d[49] - 2 * d[11] * d[19] * d[49] + 2 * d[12] * d[20] * d[49] - d[12] * d[18] * d[50] - d[13] * d[19] * d[50] - d[10] * d[20] * d[50] - d[11] * d[21] * d[50] - std::pow(d[9], 2) * d[53] - std::pow(d[11], 2) * d[53] + std::pow(d[12], 2) * d[53] - d[10] * d[12] * d[54] - d[11] * d[13] * d[54];
	coeffs[67] = -std::pow(d[17], 2) * d[45] - std::pow(d[19], 2) * d[45] + std::pow(d[20], 2) * d[45] - d[18] * d[20] * d[46] - d[19] * d[21] * d[46] - 2 * d[1] * d[17] * d[53] - 2 * d[3] * d[19] * d[53] + 2 * d[4] * d[20] * d[53] - d[4] * d[18] * d[54] - d[5] * d[19] * d[54] - d[2] * d[20] * d[54] - d[3] * d[21] * d[54];
	coeffs[68] = -std::pow(d[17], 2) * d[49] - std::pow(d[19], 2) * d[49] + std::pow(d[20], 2) * d[49] - d[18] * d[20] * d[50] - d[19] * d[21] * d[50] - 2 * d[9] * d[17] * d[53] - 2 * d[11] * d[19] * d[53] + 2 * d[12] * d[20] * d[53] - d[12] * d[18] * d[54] - d[13] * d[19] * d[54] - d[10] * d[20] * d[54] - d[11] * d[21] * d[54];
	coeffs[69] = -std::pow(d[17], 2) * d[53] - std::pow(d[19], 2) * d[53] + std::pow(d[20], 2) * d[53] - d[18] * d[20] * d[54] - d[19] * d[21] * d[54];
	coeffs[70] = -std::pow(d[1], 2) * d[33] - std::pow(d[3], 2) * d[33] + std::pow(d[4], 2) * d[33] - d[2] * d[4] * d[34] - d[3] * d[5] * d[34];
	coeffs[71] = -2 * d[1] * d[9] * d[33] - 2 * d[3] * d[11] * d[33] + 2 * d[4] * d[12] * d[33] - d[4] * d[10] * d[34] - d[5] * d[11] * d[34] - d[2] * d[12] * d[34] - d[3] * d[13] * d[34] - std::pow(d[1], 2) * d[37] - std::pow(d[3], 2) * d[37] + std::pow(d[4], 2) * d[37] - d[2] * d[4] * d[38] - d[3] * d[5] * d[38];
	coeffs[72] = -std::pow(d[9], 2) * d[33] - std::pow(d[11], 2) * d[33] + std::pow(d[12], 2) * d[33] - d[10] * d[12] * d[34] - d[11] * d[13] * d[34] - 2 * d[1] * d[9] * d[37] - 2 * d[3] * d[11] * d[37] + 2 * d[4] * d[12] * d[37] - d[4] * d[10] * d[38] - d[5] * d[11] * d[38] - d[2] * d[12] * d[38] - d[3] * d[13] * d[38];
	coeffs[73] = -std::pow(d[9], 2) * d[37] - std::pow(d[11], 2) * d[37] + std::pow(d[12], 2) * d[37] - d[10] * d[12] * d[38] - d[11] * d[13] * d[38];
	coeffs[74] = -2 * d[1] * d[17] * d[33] - 2 * d[3] * d[19] * d[33] + 2 * d[4] * d[20] * d[33] - d[4] * d[18] * d[34] - d[5] * d[19] * d[34] - d[2] * d[20] * d[34] - d[3] * d[21] * d[34] - std::pow(d[1], 2) * d[41] - std::pow(d[3], 2) * d[41] + std::pow(d[4], 2) * d[41] - d[2] * d[4] * d[42] - d[3] * d[5] * d[42];
	coeffs[75] = -2 * d[9] * d[17] * d[33] - 2 * d[11] * d[19] * d[33] + 2 * d[12] * d[20] * d[33] - d[12] * d[18] * d[34] - d[13] * d[19] * d[34] - d[10] * d[20] * d[34] - d[11] * d[21] * d[34] - 2 * d[1] * d[17] * d[37] - 2 * d[3] * d[19] * d[37] + 2 * d[4] * d[20] * d[37] - d[4] * d[18] * d[38] - d[5] * d[19] * d[38] - d[2] * d[20] * d[38] - d[3] * d[21] * d[38] - 2 * d[1] * d[9] * d[41] - 2 * d[3] * d[11] * d[41] + 2 * d[4] * d[12] * d[41] - d[4] * d[10] * d[42] - d[5] * d[11] * d[42] - d[2] * d[12] * d[42] - d[3] * d[13] * d[42];
	coeffs[76] = -2 * d[9] * d[17] * d[37] - 2 * d[11] * d[19] * d[37] + 2 * d[12] * d[20] * d[37] - d[12] * d[18] * d[38] - d[13] * d[19] * d[38] - d[10] * d[20] * d[38] - d[11] * d[21] * d[38] - std::pow(d[9], 2) * d[41] - std::pow(d[11], 2) * d[41] + std::pow(d[12], 2) * d[41] - d[10] * d[12] * d[42] - d[11] * d[13] * d[42];
	coeffs[77] = -std::pow(d[17], 2) * d[33] - std::pow(d[19], 2) * d[33] + std::pow(d[20], 2) * d[33] - d[18] * d[20] * d[34] - d[19] * d[21] * d[34] - 2 * d[1] * d[17] * d[41] - 2 * d[3] * d[19] * d[41] + 2 * d[4] * d[20] * d[41] - d[4] * d[18] * d[42] - d[5] * d[19] * d[42] - d[2] * d[20] * d[42] - d[3] * d[21] * d[42];
	coeffs[78] = -std::pow(d[17], 2) * d[37] - std::pow(d[19], 2) * d[37] + std::pow(d[20], 2) * d[37] - d[18] * d[20] * d[38] - d[19] * d[21] * d[38] - 2 * d[9] * d[17] * d[41] - 2 * d[11] * d[19] * d[41] + 2 * d[12] * d[20] * d[41] - d[12] * d[18] * d[42] - d[13] * d[19] * d[42] - d[10] * d[20] * d[42] - d[11] * d[21] * d[42];
	coeffs[79] = -std::pow(d[17], 2) * d[41] - std::pow(d[19], 2) * d[41] + std::pow(d[20], 2) * d[41] - d[18] * d[20] * d[42] - d[19] * d[21] * d[42];
	coeffs[80] = -2 * d[1] * d[25] * d[45] - 2 * d[3] * d[27] * d[45] + 2 * d[4] * d[28] * d[45] - d[4] * d[26] * d[46] - d[5] * d[27] * d[46] - d[2] * d[28] * d[46] - d[3] * d[29] * d[46] - std::pow(d[1], 2) * d[57] - std::pow(d[3], 2) * d[57] + std::pow(d[4], 2) * d[57] - d[2] * d[4] * d[58] - d[3] * d[5] * d[58];
	coeffs[81] = -2 * d[9] * d[25] * d[45] - 2 * d[11] * d[27] * d[45] + 2 * d[12] * d[28] * d[45] - d[12] * d[26] * d[46] - d[13] * d[27] * d[46] - d[10] * d[28] * d[46] - d[11] * d[29] * d[46] - 2 * d[1] * d[25] * d[49] - 2 * d[3] * d[27] * d[49] + 2 * d[4] * d[28] * d[49] - d[4] * d[26] * d[50] - d[5] * d[27] * d[50] - d[2] * d[28] * d[50] - d[3] * d[29] * d[50] - 2 * d[1] * d[9] * d[57] - 2 * d[3] * d[11] * d[57] + 2 * d[4] * d[12] * d[57] - d[4] * d[10] * d[58] - d[5] * d[11] * d[58] - d[2] * d[12] * d[58] - d[3] * d[13] * d[58];
	coeffs[82] = -2 * d[9] * d[25] * d[49] - 2 * d[11] * d[27] * d[49] + 2 * d[12] * d[28] * d[49] - d[12] * d[26] * d[50] - d[13] * d[27] * d[50] - d[10] * d[28] * d[50] - d[11] * d[29] * d[50] - std::pow(d[9], 2) * d[57] - std::pow(d[11], 2) * d[57] + std::pow(d[12], 2) * d[57] - d[10] * d[12] * d[58] - d[11] * d[13] * d[58];
	coeffs[83] = -2 * d[17] * d[25] * d[45] - 2 * d[19] * d[27] * d[45] + 2 * d[20] * d[28] * d[45] - d[20] * d[26] * d[46] - d[21] * d[27] * d[46] - d[18] * d[28] * d[46] - d[19] * d[29] * d[46] - 2 * d[1] * d[25] * d[53] - 2 * d[3] * d[27] * d[53] + 2 * d[4] * d[28] * d[53] - d[4] * d[26] * d[54] - d[5] * d[27] * d[54] - d[2] * d[28] * d[54] - d[3] * d[29] * d[54] - 2 * d[1] * d[17] * d[57] - 2 * d[3] * d[19] * d[57] + 2 * d[4] * d[20] * d[57] - d[4] * d[18] * d[58] - d[5] * d[19] * d[58] - d[2] * d[20] * d[58] - d[3] * d[21] * d[58];
	coeffs[84] = -2 * d[17] * d[25] * d[49] - 2 * d[19] * d[27] * d[49] + 2 * d[20] * d[28] * d[49] - d[20] * d[26] * d[50] - d[21] * d[27] * d[50] - d[18] * d[28] * d[50] - d[19] * d[29] * d[50] - 2 * d[9] * d[25] * d[53] - 2 * d[11] * d[27] * d[53] + 2 * d[12] * d[28] * d[53] - d[12] * d[26] * d[54] - d[13] * d[27] * d[54] - d[10] * d[28] * d[54] - d[11] * d[29] * d[54] - 2 * d[9] * d[17] * d[57] - 2 * d[11] * d[19] * d[57] + 2 * d[12] * d[20] * d[57] - d[12] * d[18] * d[58] - d[13] * d[19] * d[58] - d[10] * d[20] * d[58] - d[11] * d[21] * d[58];
	coeffs[85] = -2 * d[17] * d[25] * d[53] - 2 * d[19] * d[27] * d[53] + 2 * d[20] * d[28] * d[53] - d[20] * d[26] * d[54] - d[21] * d[27] * d[54] - d[18] * d[28] * d[54] - d[19] * d[29] * d[54] - std::pow(d[17], 2) * d[57] - std::pow(d[19], 2) * d[57] + std::pow(d[20], 2) * d[57] - d[18] * d[20] * d[58] - d[19] * d[21] * d[58];
	coeffs[86] = -2 * d[1] * d[25] * d[33] - 2 * d[3] * d[27] * d[33] + 2 * d[4] * d[28] * d[33] - d[4] * d[26] * d[34] - d[5] * d[27] * d[34] - d[2] * d[28] * d[34] - d[3] * d[29] * d[34] - std::pow(d[1], 2) * d[61] - std::pow(d[3], 2) * d[61] + std::pow(d[4], 2) * d[61] - d[2] * d[4] * d[62] - d[3] * d[5] * d[62];
	coeffs[87] = -2 * d[9] * d[25] * d[33] - 2 * d[11] * d[27] * d[33] + 2 * d[12] * d[28] * d[33] - d[12] * d[26] * d[34] - d[13] * d[27] * d[34] - d[10] * d[28] * d[34] - d[11] * d[29] * d[34] - 2 * d[1] * d[25] * d[37] - 2 * d[3] * d[27] * d[37] + 2 * d[4] * d[28] * d[37] - d[4] * d[26] * d[38] - d[5] * d[27] * d[38] - d[2] * d[28] * d[38] - d[3] * d[29] * d[38] - 2 * d[1] * d[9] * d[61] - 2 * d[3] * d[11] * d[61] + 2 * d[4] * d[12] * d[61] - d[4] * d[10] * d[62] - d[5] * d[11] * d[62] - d[2] * d[12] * d[62] - d[3] * d[13] * d[62];
	coeffs[88] = -2 * d[9] * d[25] * d[37] - 2 * d[11] * d[27] * d[37] + 2 * d[12] * d[28] * d[37] - d[12] * d[26] * d[38] - d[13] * d[27] * d[38] - d[10] * d[28] * d[38] - d[11] * d[29] * d[38] - std::pow(d[9], 2) * d[61] - std::pow(d[11], 2) * d[61] + std::pow(d[12], 2) * d[61] - d[10] * d[12] * d[62] - d[11] * d[13] * d[62];
	coeffs[89] = -2 * d[17] * d[25] * d[33] - 2 * d[19] * d[27] * d[33] + 2 * d[20] * d[28] * d[33] - d[20] * d[26] * d[34] - d[21] * d[27] * d[34] - d[18] * d[28] * d[34] - d[19] * d[29] * d[34] - 2 * d[1] * d[25] * d[41] - 2 * d[3] * d[27] * d[41] + 2 * d[4] * d[28] * d[41] - d[4] * d[26] * d[42] - d[5] * d[27] * d[42] - d[2] * d[28] * d[42] - d[3] * d[29] * d[42] - 2 * d[1] * d[17] * d[61] - 2 * d[3] * d[19] * d[61] + 2 * d[4] * d[20] * d[61] - d[4] * d[18] * d[62] - d[5] * d[19] * d[62] - d[2] * d[20] * d[62] - d[3] * d[21] * d[62];
	coeffs[90] = -2 * d[17] * d[25] * d[37] - 2 * d[19] * d[27] * d[37] + 2 * d[20] * d[28] * d[37] - d[20] * d[26] * d[38] - d[21] * d[27] * d[38] - d[18] * d[28] * d[38] - d[19] * d[29] * d[38] - 2 * d[9] * d[25] * d[41] - 2 * d[11] * d[27] * d[41] + 2 * d[12] * d[28] * d[41] - d[12] * d[26] * d[42] - d[13] * d[27] * d[42] - d[10] * d[28] * d[42] - d[11] * d[29] * d[42] - 2 * d[9] * d[17] * d[61] - 2 * d[11] * d[19] * d[61] + 2 * d[12] * d[20] * d[61] - d[12] * d[18] * d[62] - d[13] * d[19] * d[62] - d[10] * d[20] * d[62] - d[11] * d[21] * d[62];
	coeffs[91] = -2 * d[17] * d[25] * d[41] - 2 * d[19] * d[27] * d[41] + 2 * d[20] * d[28] * d[41] - d[20] * d[26] * d[42] - d[21] * d[27] * d[42] - d[18] * d[28] * d[42] - d[19] * d[29] * d[42] - std::pow(d[17], 2) * d[61] - std::pow(d[19], 2) * d[61] + std::pow(d[20], 2) * d[61] - d[18] * d[20] * d[62] - d[19] * d[21] * d[62];
	coeffs[92] = -std::pow(d[25], 2) * d[45] - std::pow(d[27], 2) * d[45] + std::pow(d[28], 2) * d[45] - d[26] * d[28] * d[46] - d[27] * d[29] * d[46] - 2 * d[1] * d[25] * d[57] - 2 * d[3] * d[27] * d[57] + 2 * d[4] * d[28] * d[57] - d[4] * d[26] * d[58] - d[5] * d[27] * d[58] - d[2] * d[28] * d[58] - d[3] * d[29] * d[58];
	coeffs[93] = -std::pow(d[25], 2) * d[49] - std::pow(d[27], 2) * d[49] + std::pow(d[28], 2) * d[49] - d[26] * d[28] * d[50] - d[27] * d[29] * d[50] - 2 * d[9] * d[25] * d[57] - 2 * d[11] * d[27] * d[57] + 2 * d[12] * d[28] * d[57] - d[12] * d[26] * d[58] - d[13] * d[27] * d[58] - d[10] * d[28] * d[58] - d[11] * d[29] * d[58];
	coeffs[94] = -std::pow(d[25], 2) * d[53] - std::pow(d[27], 2) * d[53] + std::pow(d[28], 2) * d[53] - d[26] * d[28] * d[54] - d[27] * d[29] * d[54] - 2 * d[17] * d[25] * d[57] - 2 * d[19] * d[27] * d[57] + 2 * d[20] * d[28] * d[57] - d[20] * d[26] * d[58] - d[21] * d[27] * d[58] - d[18] * d[28] * d[58] - d[19] * d[29] * d[58];
	coeffs[95] = -std::pow(d[25], 2) * d[33] - std::pow(d[27], 2) * d[33] + std::pow(d[28], 2) * d[33] - d[26] * d[28] * d[34] - d[27] * d[29] * d[34] - 2 * d[1] * d[25] * d[61] - 2 * d[3] * d[27] * d[61] + 2 * d[4] * d[28] * d[61] - d[4] * d[26] * d[62] - d[5] * d[27] * d[62] - d[2] * d[28] * d[62] - d[3] * d[29] * d[62];
	coeffs[96] = -std::pow(d[25], 2) * d[37] - std::pow(d[27], 2) * d[37] + std::pow(d[28], 2) * d[37] - d[26] * d[28] * d[38] - d[27] * d[29] * d[38] - 2 * d[9] * d[25] * d[61] - 2 * d[11] * d[27] * d[61] + 2 * d[12] * d[28] * d[61] - d[12] * d[26] * d[62] - d[13] * d[27] * d[62] - d[10] * d[28] * d[62] - d[11] * d[29] * d[62];
	coeffs[97] = -std::pow(d[25], 2) * d[41] - std::pow(d[27], 2) * d[41] + std::pow(d[28], 2) * d[41] - d[26] * d[28] * d[42] - d[27] * d[29] * d[42] - 2 * d[17] * d[25] * d[61] - 2 * d[19] * d[27] * d[61] + 2 * d[20] * d[28] * d[61] - d[20] * d[26] * d[62] - d[21] * d[27] * d[62] - d[18] * d[28] * d[62] - d[19] * d[29] * d[62];
	coeffs[98] = -std::pow(d[25], 2) * d[57] - std::pow(d[27], 2) * d[57] + std::pow(d[28], 2) * d[57] - d[26] * d[28] * d[58] - d[27] * d[29] * d[58];
	coeffs[99] = -std::pow(d[25], 2) * d[61] - std::pow(d[27], 2) * d[61] + std::pow(d[28], 2) * d[61] - d[26] * d[28] * d[62] - d[27] * d[29] * d[62];
	coeffs[100] = d[2] * d[4] * d[45] + d[3] * d[5] * d[45] + std::pow(d[1], 2) * d[46] - std::pow(d[2], 2) * d[46] + std::pow(d[5], 2) * d[46];
	coeffs[101] = d[4] * d[10] * d[45] + d[5] * d[11] * d[45] + d[2] * d[12] * d[45] + d[3] * d[13] * d[45] + 2 * d[1] * d[9] * d[46] - 2 * d[2] * d[10] * d[46] + 2 * d[5] * d[13] * d[46] + d[2] * d[4] * d[49] + d[3] * d[5] * d[49] + std::pow(d[1], 2) * d[50] - std::pow(d[2], 2) * d[50] + std::pow(d[5], 2) * d[50];
	coeffs[102] = d[10] * d[12] * d[45] + d[11] * d[13] * d[45] + std::pow(d[9], 2) * d[46] - std::pow(d[10], 2) * d[46] + std::pow(d[13], 2) * d[46] + d[4] * d[10] * d[49] + d[5] * d[11] * d[49] + d[2] * d[12] * d[49] + d[3] * d[13] * d[49] + 2 * d[1] * d[9] * d[50] - 2 * d[2] * d[10] * d[50] + 2 * d[5] * d[13] * d[50];
	coeffs[103] = d[10] * d[12] * d[49] + d[11] * d[13] * d[49] + std::pow(d[9], 2) * d[50] - std::pow(d[10], 2) * d[50] + std::pow(d[13], 2) * d[50];
	coeffs[104] = d[4] * d[18] * d[45] + d[5] * d[19] * d[45] + d[2] * d[20] * d[45] + d[3] * d[21] * d[45] + 2 * d[1] * d[17] * d[46] - 2 * d[2] * d[18] * d[46] + 2 * d[5] * d[21] * d[46] + d[2] * d[4] * d[53] + d[3] * d[5] * d[53] + std::pow(d[1], 2) * d[54] - std::pow(d[2], 2) * d[54] + std::pow(d[5], 2) * d[54];
	coeffs[105] = d[12] * d[18] * d[45] + d[13] * d[19] * d[45] + d[10] * d[20] * d[45] + d[11] * d[21] * d[45] + 2 * d[9] * d[17] * d[46] - 2 * d[10] * d[18] * d[46] + 2 * d[13] * d[21] * d[46] + d[4] * d[18] * d[49] + d[5] * d[19] * d[49] + d[2] * d[20] * d[49] + d[3] * d[21] * d[49] + 2 * d[1] * d[17] * d[50] - 2 * d[2] * d[18] * d[50] + 2 * d[5] * d[21] * d[50] + d[4] * d[10] * d[53] + d[5] * d[11] * d[53] + d[2] * d[12] * d[53] + d[3] * d[13] * d[53] + 2 * d[1] * d[9] * d[54] - 2 * d[2] * d[10] * d[54] + 2 * d[5] * d[13] * d[54];
	coeffs[106] = d[12] * d[18] * d[49] + d[13] * d[19] * d[49] + d[10] * d[20] * d[49] + d[11] * d[21] * d[49] + 2 * d[9] * d[17] * d[50] - 2 * d[10] * d[18] * d[50] + 2 * d[13] * d[21] * d[50] + d[10] * d[12] * d[53] + d[11] * d[13] * d[53] + std::pow(d[9], 2) * d[54] - std::pow(d[10], 2) * d[54] + std::pow(d[13], 2) * d[54];
	coeffs[107] = d[18] * d[20] * d[45] + d[19] * d[21] * d[45] + std::pow(d[17], 2) * d[46] - std::pow(d[18], 2) * d[46] + std::pow(d[21], 2) * d[46] + d[4] * d[18] * d[53] + d[5] * d[19] * d[53] + d[2] * d[20] * d[53] + d[3] * d[21] * d[53] + 2 * d[1] * d[17] * d[54] - 2 * d[2] * d[18] * d[54] + 2 * d[5] * d[21] * d[54];
	coeffs[108] = d[18] * d[20] * d[49] + d[19] * d[21] * d[49] + std::pow(d[17], 2) * d[50] - std::pow(d[18], 2) * d[50] + std::pow(d[21], 2) * d[50] + d[12] * d[18] * d[53] + d[13] * d[19] * d[53] + d[10] * d[20] * d[53] + d[11] * d[21] * d[53] + 2 * d[9] * d[17] * d[54] - 2 * d[10] * d[18] * d[54] + 2 * d[13] * d[21] * d[54];
	coeffs[109] = d[18] * d[20] * d[53] + d[19] * d[21] * d[53] + std::pow(d[17], 2) * d[54] - std::pow(d[18], 2) * d[54] + std::pow(d[21], 2) * d[54];
	coeffs[110] = d[2] * d[4] * d[33] + d[3] * d[5] * d[33] + std::pow(d[1], 2) * d[34] - std::pow(d[2], 2) * d[34] + std::pow(d[5], 2) * d[34];
	coeffs[111] = d[4] * d[10] * d[33] + d[5] * d[11] * d[33] + d[2] * d[12] * d[33] + d[3] * d[13] * d[33] + 2 * d[1] * d[9] * d[34] - 2 * d[2] * d[10] * d[34] + 2 * d[5] * d[13] * d[34] + d[2] * d[4] * d[37] + d[3] * d[5] * d[37] + std::pow(d[1], 2) * d[38] - std::pow(d[2], 2) * d[38] + std::pow(d[5], 2) * d[38];
	coeffs[112] = d[10] * d[12] * d[33] + d[11] * d[13] * d[33] + std::pow(d[9], 2) * d[34] - std::pow(d[10], 2) * d[34] + std::pow(d[13], 2) * d[34] + d[4] * d[10] * d[37] + d[5] * d[11] * d[37] + d[2] * d[12] * d[37] + d[3] * d[13] * d[37] + 2 * d[1] * d[9] * d[38] - 2 * d[2] * d[10] * d[38] + 2 * d[5] * d[13] * d[38];
	coeffs[113] = d[10] * d[12] * d[37] + d[11] * d[13] * d[37] + std::pow(d[9], 2) * d[38] - std::pow(d[10], 2) * d[38] + std::pow(d[13], 2) * d[38];
	coeffs[114] = d[4] * d[18] * d[33] + d[5] * d[19] * d[33] + d[2] * d[20] * d[33] + d[3] * d[21] * d[33] + 2 * d[1] * d[17] * d[34] - 2 * d[2] * d[18] * d[34] + 2 * d[5] * d[21] * d[34] + d[2] * d[4] * d[41] + d[3] * d[5] * d[41] + std::pow(d[1], 2) * d[42] - std::pow(d[2], 2) * d[42] + std::pow(d[5], 2) * d[42];
	coeffs[115] = d[12] * d[18] * d[33] + d[13] * d[19] * d[33] + d[10] * d[20] * d[33] + d[11] * d[21] * d[33] + 2 * d[9] * d[17] * d[34] - 2 * d[10] * d[18] * d[34] + 2 * d[13] * d[21] * d[34] + d[4] * d[18] * d[37] + d[5] * d[19] * d[37] + d[2] * d[20] * d[37] + d[3] * d[21] * d[37] + 2 * d[1] * d[17] * d[38] - 2 * d[2] * d[18] * d[38] + 2 * d[5] * d[21] * d[38] + d[4] * d[10] * d[41] + d[5] * d[11] * d[41] + d[2] * d[12] * d[41] + d[3] * d[13] * d[41] + 2 * d[1] * d[9] * d[42] - 2 * d[2] * d[10] * d[42] + 2 * d[5] * d[13] * d[42];
	coeffs[116] = d[12] * d[18] * d[37] + d[13] * d[19] * d[37] + d[10] * d[20] * d[37] + d[11] * d[21] * d[37] + 2 * d[9] * d[17] * d[38] - 2 * d[10] * d[18] * d[38] + 2 * d[13] * d[21] * d[38] + d[10] * d[12] * d[41] + d[11] * d[13] * d[41] + std::pow(d[9], 2) * d[42] - std::pow(d[10], 2) * d[42] + std::pow(d[13], 2) * d[42];
	coeffs[117] = d[18] * d[20] * d[33] + d[19] * d[21] * d[33] + std::pow(d[17], 2) * d[34] - std::pow(d[18], 2) * d[34] + std::pow(d[21], 2) * d[34] + d[4] * d[18] * d[41] + d[5] * d[19] * d[41] + d[2] * d[20] * d[41] + d[3] * d[21] * d[41] + 2 * d[1] * d[17] * d[42] - 2 * d[2] * d[18] * d[42] + 2 * d[5] * d[21] * d[42];
	coeffs[118] = d[18] * d[20] * d[37] + d[19] * d[21] * d[37] + std::pow(d[17], 2) * d[38] - std::pow(d[18], 2) * d[38] + std::pow(d[21], 2) * d[38] + d[12] * d[18] * d[41] + d[13] * d[19] * d[41] + d[10] * d[20] * d[41] + d[11] * d[21] * d[41] + 2 * d[9] * d[17] * d[42] - 2 * d[10] * d[18] * d[42] + 2 * d[13] * d[21] * d[42];
	coeffs[119] = d[18] * d[20] * d[41] + d[19] * d[21] * d[41] + std::pow(d[17], 2) * d[42] - std::pow(d[18], 2) * d[42] + std::pow(d[21], 2) * d[42];
	coeffs[120] = d[4] * d[26] * d[45] + d[5] * d[27] * d[45] + d[2] * d[28] * d[45] + d[3] * d[29] * d[45] + 2 * d[1] * d[25] * d[46] - 2 * d[2] * d[26] * d[46] + 2 * d[5] * d[29] * d[46] + d[2] * d[4] * d[57] + d[3] * d[5] * d[57] + std::pow(d[1], 2) * d[58] - std::pow(d[2], 2) * d[58] + std::pow(d[5], 2) * d[58];
	coeffs[121] = d[12] * d[26] * d[45] + d[13] * d[27] * d[45] + d[10] * d[28] * d[45] + d[11] * d[29] * d[45] + 2 * d[9] * d[25] * d[46] - 2 * d[10] * d[26] * d[46] + 2 * d[13] * d[29] * d[46] + d[4] * d[26] * d[49] + d[5] * d[27] * d[49] + d[2] * d[28] * d[49] + d[3] * d[29] * d[49] + 2 * d[1] * d[25] * d[50] - 2 * d[2] * d[26] * d[50] + 2 * d[5] * d[29] * d[50] + d[4] * d[10] * d[57] + d[5] * d[11] * d[57] + d[2] * d[12] * d[57] + d[3] * d[13] * d[57] + 2 * d[1] * d[9] * d[58] - 2 * d[2] * d[10] * d[58] + 2 * d[5] * d[13] * d[58];
	coeffs[122] = d[12] * d[26] * d[49] + d[13] * d[27] * d[49] + d[10] * d[28] * d[49] + d[11] * d[29] * d[49] + 2 * d[9] * d[25] * d[50] - 2 * d[10] * d[26] * d[50] + 2 * d[13] * d[29] * d[50] + d[10] * d[12] * d[57] + d[11] * d[13] * d[57] + std::pow(d[9], 2) * d[58] - std::pow(d[10], 2) * d[58] + std::pow(d[13], 2) * d[58];
	coeffs[123] = d[20] * d[26] * d[45] + d[21] * d[27] * d[45] + d[18] * d[28] * d[45] + d[19] * d[29] * d[45] + 2 * d[17] * d[25] * d[46] - 2 * d[18] * d[26] * d[46] + 2 * d[21] * d[29] * d[46] + d[4] * d[26] * d[53] + d[5] * d[27] * d[53] + d[2] * d[28] * d[53] + d[3] * d[29] * d[53] + 2 * d[1] * d[25] * d[54] - 2 * d[2] * d[26] * d[54] + 2 * d[5] * d[29] * d[54] + d[4] * d[18] * d[57] + d[5] * d[19] * d[57] + d[2] * d[20] * d[57] + d[3] * d[21] * d[57] + 2 * d[1] * d[17] * d[58] - 2 * d[2] * d[18] * d[58] + 2 * d[5] * d[21] * d[58];
	coeffs[124] = d[20] * d[26] * d[49] + d[21] * d[27] * d[49] + d[18] * d[28] * d[49] + d[19] * d[29] * d[49] + 2 * d[17] * d[25] * d[50] - 2 * d[18] * d[26] * d[50] + 2 * d[21] * d[29] * d[50] + d[12] * d[26] * d[53] + d[13] * d[27] * d[53] + d[10] * d[28] * d[53] + d[11] * d[29] * d[53] + 2 * d[9] * d[25] * d[54] - 2 * d[10] * d[26] * d[54] + 2 * d[13] * d[29] * d[54] + d[12] * d[18] * d[57] + d[13] * d[19] * d[57] + d[10] * d[20] * d[57] + d[11] * d[21] * d[57] + 2 * d[9] * d[17] * d[58] - 2 * d[10] * d[18] * d[58] + 2 * d[13] * d[21] * d[58];
	coeffs[125] = d[20] * d[26] * d[53] + d[21] * d[27] * d[53] + d[18] * d[28] * d[53] + d[19] * d[29] * d[53] + 2 * d[17] * d[25] * d[54] - 2 * d[18] * d[26] * d[54] + 2 * d[21] * d[29] * d[54] + d[18] * d[20] * d[57] + d[19] * d[21] * d[57] + std::pow(d[17], 2) * d[58] - std::pow(d[18], 2) * d[58] + std::pow(d[21], 2) * d[58];
	coeffs[126] = d[4] * d[26] * d[33] + d[5] * d[27] * d[33] + d[2] * d[28] * d[33] + d[3] * d[29] * d[33] + 2 * d[1] * d[25] * d[34] - 2 * d[2] * d[26] * d[34] + 2 * d[5] * d[29] * d[34] + d[2] * d[4] * d[61] + d[3] * d[5] * d[61] + std::pow(d[1], 2) * d[62] - std::pow(d[2], 2) * d[62] + std::pow(d[5], 2) * d[62];
	coeffs[127] = d[12] * d[26] * d[33] + d[13] * d[27] * d[33] + d[10] * d[28] * d[33] + d[11] * d[29] * d[33] + 2 * d[9] * d[25] * d[34] - 2 * d[10] * d[26] * d[34] + 2 * d[13] * d[29] * d[34] + d[4] * d[26] * d[37] + d[5] * d[27] * d[37] + d[2] * d[28] * d[37] + d[3] * d[29] * d[37] + 2 * d[1] * d[25] * d[38] - 2 * d[2] * d[26] * d[38] + 2 * d[5] * d[29] * d[38] + d[4] * d[10] * d[61] + d[5] * d[11] * d[61] + d[2] * d[12] * d[61] + d[3] * d[13] * d[61] + 2 * d[1] * d[9] * d[62] - 2 * d[2] * d[10] * d[62] + 2 * d[5] * d[13] * d[62];
	coeffs[128] = d[12] * d[26] * d[37] + d[13] * d[27] * d[37] + d[10] * d[28] * d[37] + d[11] * d[29] * d[37] + 2 * d[9] * d[25] * d[38] - 2 * d[10] * d[26] * d[38] + 2 * d[13] * d[29] * d[38] + d[10] * d[12] * d[61] + d[11] * d[13] * d[61] + std::pow(d[9], 2) * d[62] - std::pow(d[10], 2) * d[62] + std::pow(d[13], 2) * d[62];
	coeffs[129] = d[20] * d[26] * d[33] + d[21] * d[27] * d[33] + d[18] * d[28] * d[33] + d[19] * d[29] * d[33] + 2 * d[17] * d[25] * d[34] - 2 * d[18] * d[26] * d[34] + 2 * d[21] * d[29] * d[34] + d[4] * d[26] * d[41] + d[5] * d[27] * d[41] + d[2] * d[28] * d[41] + d[3] * d[29] * d[41] + 2 * d[1] * d[25] * d[42] - 2 * d[2] * d[26] * d[42] + 2 * d[5] * d[29] * d[42] + d[4] * d[18] * d[61] + d[5] * d[19] * d[61] + d[2] * d[20] * d[61] + d[3] * d[21] * d[61] + 2 * d[1] * d[17] * d[62] - 2 * d[2] * d[18] * d[62] + 2 * d[5] * d[21] * d[62];
	coeffs[130] = d[20] * d[26] * d[37] + d[21] * d[27] * d[37] + d[18] * d[28] * d[37] + d[19] * d[29] * d[37] + 2 * d[17] * d[25] * d[38] - 2 * d[18] * d[26] * d[38] + 2 * d[21] * d[29] * d[38] + d[12] * d[26] * d[41] + d[13] * d[27] * d[41] + d[10] * d[28] * d[41] + d[11] * d[29] * d[41] + 2 * d[9] * d[25] * d[42] - 2 * d[10] * d[26] * d[42] + 2 * d[13] * d[29] * d[42] + d[12] * d[18] * d[61] + d[13] * d[19] * d[61] + d[10] * d[20] * d[61] + d[11] * d[21] * d[61] + 2 * d[9] * d[17] * d[62] - 2 * d[10] * d[18] * d[62] + 2 * d[13] * d[21] * d[62];
	coeffs[131] = d[20] * d[26] * d[41] + d[21] * d[27] * d[41] + d[18] * d[28] * d[41] + d[19] * d[29] * d[41] + 2 * d[17] * d[25] * d[42] - 2 * d[18] * d[26] * d[42] + 2 * d[21] * d[29] * d[42] + d[18] * d[20] * d[61] + d[19] * d[21] * d[61] + std::pow(d[17], 2) * d[62] - std::pow(d[18], 2) * d[62] + std::pow(d[21], 2) * d[62];
	coeffs[132] = d[26] * d[28] * d[45] + d[27] * d[29] * d[45] + std::pow(d[25], 2) * d[46] - std::pow(d[26], 2) * d[46] + std::pow(d[29], 2) * d[46] + d[4] * d[26] * d[57] + d[5] * d[27] * d[57] + d[2] * d[28] * d[57] + d[3] * d[29] * d[57] + 2 * d[1] * d[25] * d[58] - 2 * d[2] * d[26] * d[58] + 2 * d[5] * d[29] * d[58];
	coeffs[133] = d[26] * d[28] * d[49] + d[27] * d[29] * d[49] + std::pow(d[25], 2) * d[50] - std::pow(d[26], 2) * d[50] + std::pow(d[29], 2) * d[50] + d[12] * d[26] * d[57] + d[13] * d[27] * d[57] + d[10] * d[28] * d[57] + d[11] * d[29] * d[57] + 2 * d[9] * d[25] * d[58] - 2 * d[10] * d[26] * d[58] + 2 * d[13] * d[29] * d[58];
	coeffs[134] = d[26] * d[28] * d[53] + d[27] * d[29] * d[53] + std::pow(d[25], 2) * d[54] - std::pow(d[26], 2) * d[54] + std::pow(d[29], 2) * d[54] + d[20] * d[26] * d[57] + d[21] * d[27] * d[57] + d[18] * d[28] * d[57] + d[19] * d[29] * d[57] + 2 * d[17] * d[25] * d[58] - 2 * d[18] * d[26] * d[58] + 2 * d[21] * d[29] * d[58];
	coeffs[135] = d[26] * d[28] * d[33] + d[27] * d[29] * d[33] + std::pow(d[25], 2) * d[34] - std::pow(d[26], 2) * d[34] + std::pow(d[29], 2) * d[34] + d[4] * d[26] * d[61] + d[5] * d[27] * d[61] + d[2] * d[28] * d[61] + d[3] * d[29] * d[61] + 2 * d[1] * d[25] * d[62] - 2 * d[2] * d[26] * d[62] + 2 * d[5] * d[29] * d[62];
	coeffs[136] = d[26] * d[28] * d[37] + d[27] * d[29] * d[37] + std::pow(d[25], 2) * d[38] - std::pow(d[26], 2) * d[38] + std::pow(d[29], 2) * d[38] + d[12] * d[26] * d[61] + d[13] * d[27] * d[61] + d[10] * d[28] * d[61] + d[11] * d[29] * d[61] + 2 * d[9] * d[25] * d[62] - 2 * d[10] * d[26] * d[62] + 2 * d[13] * d[29] * d[62];
	coeffs[137] = d[26] * d[28] * d[41] + d[27] * d[29] * d[41] + std::pow(d[25], 2) * d[42] - std::pow(d[26], 2) * d[42] + std::pow(d[29], 2) * d[42] + d[20] * d[26] * d[61] + d[21] * d[27] * d[61] + d[18] * d[28] * d[61] + d[19] * d[29] * d[61] + 2 * d[17] * d[25] * d[62] - 2 * d[18] * d[26] * d[62] + 2 * d[21] * d[29] * d[62];
	coeffs[138] = d[26] * d[28] * d[57] + d[27] * d[29] * d[57] + std::pow(d[25], 2) * d[58] - std::pow(d[26], 2) * d[58] + std::pow(d[29], 2) * d[58];
	coeffs[139] = d[26] * d[28] * d[61] + d[27] * d[29] * d[61] + std::pow(d[25], 2) * d[62] - std::pow(d[26], 2) * d[62] + std::pow(d[29], 2) * d[62];
	coeffs[140] = d[0] * d[4] * d[45] + d[1] * d[5] * d[45] - d[0] * d[2] * d[46] - d[1] * d[3] * d[46];
	coeffs[141] = d[4] * d[8] * d[45] + d[5] * d[9] * d[45] + d[0] * d[12] * d[45] + d[1] * d[13] * d[45] - d[2] * d[8] * d[46] - d[3] * d[9] * d[46] - d[0] * d[10] * d[46] - d[1] * d[11] * d[46] + d[0] * d[4] * d[49] + d[1] * d[5] * d[49] - d[0] * d[2] * d[50] - d[1] * d[3] * d[50];
	coeffs[142] = d[8] * d[12] * d[45] + d[9] * d[13] * d[45] - d[8] * d[10] * d[46] - d[9] * d[11] * d[46] + d[4] * d[8] * d[49] + d[5] * d[9] * d[49] + d[0] * d[12] * d[49] + d[1] * d[13] * d[49] - d[2] * d[8] * d[50] - d[3] * d[9] * d[50] - d[0] * d[10] * d[50] - d[1] * d[11] * d[50];
	coeffs[143] = d[8] * d[12] * d[49] + d[9] * d[13] * d[49] - d[8] * d[10] * d[50] - d[9] * d[11] * d[50];
	coeffs[144] = d[4] * d[16] * d[45] + d[5] * d[17] * d[45] + d[0] * d[20] * d[45] + d[1] * d[21] * d[45] - d[2] * d[16] * d[46] - d[3] * d[17] * d[46] - d[0] * d[18] * d[46] - d[1] * d[19] * d[46] + d[0] * d[4] * d[53] + d[1] * d[5] * d[53] - d[0] * d[2] * d[54] - d[1] * d[3] * d[54];
	coeffs[145] = d[12] * d[16] * d[45] + d[13] * d[17] * d[45] + d[8] * d[20] * d[45] + d[9] * d[21] * d[45] - d[10] * d[16] * d[46] - d[11] * d[17] * d[46] - d[8] * d[18] * d[46] - d[9] * d[19] * d[46] + d[4] * d[16] * d[49] + d[5] * d[17] * d[49] + d[0] * d[20] * d[49] + d[1] * d[21] * d[49] - d[2] * d[16] * d[50] - d[3] * d[17] * d[50] - d[0] * d[18] * d[50] - d[1] * d[19] * d[50] + d[4] * d[8] * d[53] + d[5] * d[9] * d[53] + d[0] * d[12] * d[53] + d[1] * d[13] * d[53] - d[2] * d[8] * d[54] - d[3] * d[9] * d[54] - d[0] * d[10] * d[54] - d[1] * d[11] * d[54];
	coeffs[146] = d[12] * d[16] * d[49] + d[13] * d[17] * d[49] + d[8] * d[20] * d[49] + d[9] * d[21] * d[49] - d[10] * d[16] * d[50] - d[11] * d[17] * d[50] - d[8] * d[18] * d[50] - d[9] * d[19] * d[50] + d[8] * d[12] * d[53] + d[9] * d[13] * d[53] - d[8] * d[10] * d[54] - d[9] * d[11] * d[54];
	coeffs[147] = d[16] * d[20] * d[45] + d[17] * d[21] * d[45] - d[16] * d[18] * d[46] - d[17] * d[19] * d[46] + d[4] * d[16] * d[53] + d[5] * d[17] * d[53] + d[0] * d[20] * d[53] + d[1] * d[21] * d[53] - d[2] * d[16] * d[54] - d[3] * d[17] * d[54] - d[0] * d[18] * d[54] - d[1] * d[19] * d[54];
	coeffs[148] = d[16] * d[20] * d[49] + d[17] * d[21] * d[49] - d[16] * d[18] * d[50] - d[17] * d[19] * d[50] + d[12] * d[16] * d[53] + d[13] * d[17] * d[53] + d[8] * d[20] * d[53] + d[9] * d[21] * d[53] - d[10] * d[16] * d[54] - d[11] * d[17] * d[54] - d[8] * d[18] * d[54] - d[9] * d[19] * d[54];
	coeffs[149] = d[16] * d[20] * d[53] + d[17] * d[21] * d[53] - d[16] * d[18] * d[54] - d[17] * d[19] * d[54];
	coeffs[150] = d[0] * d[4] * d[33] + d[1] * d[5] * d[33] - d[0] * d[2] * d[34] - d[1] * d[3] * d[34];
	coeffs[151] = d[4] * d[8] * d[33] + d[5] * d[9] * d[33] + d[0] * d[12] * d[33] + d[1] * d[13] * d[33] - d[2] * d[8] * d[34] - d[3] * d[9] * d[34] - d[0] * d[10] * d[34] - d[1] * d[11] * d[34] + d[0] * d[4] * d[37] + d[1] * d[5] * d[37] - d[0] * d[2] * d[38] - d[1] * d[3] * d[38];
	coeffs[152] = d[8] * d[12] * d[33] + d[9] * d[13] * d[33] - d[8] * d[10] * d[34] - d[9] * d[11] * d[34] + d[4] * d[8] * d[37] + d[5] * d[9] * d[37] + d[0] * d[12] * d[37] + d[1] * d[13] * d[37] - d[2] * d[8] * d[38] - d[3] * d[9] * d[38] - d[0] * d[10] * d[38] - d[1] * d[11] * d[38];
	coeffs[153] = d[8] * d[12] * d[37] + d[9] * d[13] * d[37] - d[8] * d[10] * d[38] - d[9] * d[11] * d[38];
	coeffs[154] = d[4] * d[16] * d[33] + d[5] * d[17] * d[33] + d[0] * d[20] * d[33] + d[1] * d[21] * d[33] - d[2] * d[16] * d[34] - d[3] * d[17] * d[34] - d[0] * d[18] * d[34] - d[1] * d[19] * d[34] + d[0] * d[4] * d[41] + d[1] * d[5] * d[41] - d[0] * d[2] * d[42] - d[1] * d[3] * d[42];
	coeffs[155] = d[12] * d[16] * d[33] + d[13] * d[17] * d[33] + d[8] * d[20] * d[33] + d[9] * d[21] * d[33] - d[10] * d[16] * d[34] - d[11] * d[17] * d[34] - d[8] * d[18] * d[34] - d[9] * d[19] * d[34] + d[4] * d[16] * d[37] + d[5] * d[17] * d[37] + d[0] * d[20] * d[37] + d[1] * d[21] * d[37] - d[2] * d[16] * d[38] - d[3] * d[17] * d[38] - d[0] * d[18] * d[38] - d[1] * d[19] * d[38] + d[4] * d[8] * d[41] + d[5] * d[9] * d[41] + d[0] * d[12] * d[41] + d[1] * d[13] * d[41] - d[2] * d[8] * d[42] - d[3] * d[9] * d[42] - d[0] * d[10] * d[42] - d[1] * d[11] * d[42];
	coeffs[156] = d[12] * d[16] * d[37] + d[13] * d[17] * d[37] + d[8] * d[20] * d[37] + d[9] * d[21] * d[37] - d[10] * d[16] * d[38] - d[11] * d[17] * d[38] - d[8] * d[18] * d[38] - d[9] * d[19] * d[38] + d[8] * d[12] * d[41] + d[9] * d[13] * d[41] - d[8] * d[10] * d[42] - d[9] * d[11] * d[42];
	coeffs[157] = d[16] * d[20] * d[33] + d[17] * d[21] * d[33] - d[16] * d[18] * d[34] - d[17] * d[19] * d[34] + d[4] * d[16] * d[41] + d[5] * d[17] * d[41] + d[0] * d[20] * d[41] + d[1] * d[21] * d[41] - d[2] * d[16] * d[42] - d[3] * d[17] * d[42] - d[0] * d[18] * d[42] - d[1] * d[19] * d[42];
	coeffs[158] = d[16] * d[20] * d[37] + d[17] * d[21] * d[37] - d[16] * d[18] * d[38] - d[17] * d[19] * d[38] + d[12] * d[16] * d[41] + d[13] * d[17] * d[41] + d[8] * d[20] * d[41] + d[9] * d[21] * d[41] - d[10] * d[16] * d[42] - d[11] * d[17] * d[42] - d[8] * d[18] * d[42] - d[9] * d[19] * d[42];
	coeffs[159] = d[16] * d[20] * d[41] + d[17] * d[21] * d[41] - d[16] * d[18] * d[42] - d[17] * d[19] * d[42];
	coeffs[160] = d[4] * d[24] * d[45] + d[5] * d[25] * d[45] + d[0] * d[28] * d[45] + d[1] * d[29] * d[45] - d[2] * d[24] * d[46] - d[3] * d[25] * d[46] - d[0] * d[26] * d[46] - d[1] * d[27] * d[46] + d[0] * d[4] * d[57] + d[1] * d[5] * d[57] - d[0] * d[2] * d[58] - d[1] * d[3] * d[58];
	coeffs[161] = d[12] * d[24] * d[45] + d[13] * d[25] * d[45] + d[8] * d[28] * d[45] + d[9] * d[29] * d[45] - d[10] * d[24] * d[46] - d[11] * d[25] * d[46] - d[8] * d[26] * d[46] - d[9] * d[27] * d[46] + d[4] * d[24] * d[49] + d[5] * d[25] * d[49] + d[0] * d[28] * d[49] + d[1] * d[29] * d[49] - d[2] * d[24] * d[50] - d[3] * d[25] * d[50] - d[0] * d[26] * d[50] - d[1] * d[27] * d[50] + d[4] * d[8] * d[57] + d[5] * d[9] * d[57] + d[0] * d[12] * d[57] + d[1] * d[13] * d[57] - d[2] * d[8] * d[58] - d[3] * d[9] * d[58] - d[0] * d[10] * d[58] - d[1] * d[11] * d[58];
	coeffs[162] = d[12] * d[24] * d[49] + d[13] * d[25] * d[49] + d[8] * d[28] * d[49] + d[9] * d[29] * d[49] - d[10] * d[24] * d[50] - d[11] * d[25] * d[50] - d[8] * d[26] * d[50] - d[9] * d[27] * d[50] + d[8] * d[12] * d[57] + d[9] * d[13] * d[57] - d[8] * d[10] * d[58] - d[9] * d[11] * d[58];
	coeffs[163] = d[20] * d[24] * d[45] + d[21] * d[25] * d[45] + d[16] * d[28] * d[45] + d[17] * d[29] * d[45] - d[18] * d[24] * d[46] - d[19] * d[25] * d[46] - d[16] * d[26] * d[46] - d[17] * d[27] * d[46] + d[4] * d[24] * d[53] + d[5] * d[25] * d[53] + d[0] * d[28] * d[53] + d[1] * d[29] * d[53] - d[2] * d[24] * d[54] - d[3] * d[25] * d[54] - d[0] * d[26] * d[54] - d[1] * d[27] * d[54] + d[4] * d[16] * d[57] + d[5] * d[17] * d[57] + d[0] * d[20] * d[57] + d[1] * d[21] * d[57] - d[2] * d[16] * d[58] - d[3] * d[17] * d[58] - d[0] * d[18] * d[58] - d[1] * d[19] * d[58];
	coeffs[164] = d[20] * d[24] * d[49] + d[21] * d[25] * d[49] + d[16] * d[28] * d[49] + d[17] * d[29] * d[49] - d[18] * d[24] * d[50] - d[19] * d[25] * d[50] - d[16] * d[26] * d[50] - d[17] * d[27] * d[50] + d[12] * d[24] * d[53] + d[13] * d[25] * d[53] + d[8] * d[28] * d[53] + d[9] * d[29] * d[53] - d[10] * d[24] * d[54] - d[11] * d[25] * d[54] - d[8] * d[26] * d[54] - d[9] * d[27] * d[54] + d[12] * d[16] * d[57] + d[13] * d[17] * d[57] + d[8] * d[20] * d[57] + d[9] * d[21] * d[57] - d[10] * d[16] * d[58] - d[11] * d[17] * d[58] - d[8] * d[18] * d[58] - d[9] * d[19] * d[58];
	coeffs[165] = d[20] * d[24] * d[53] + d[21] * d[25] * d[53] + d[16] * d[28] * d[53] + d[17] * d[29] * d[53] - d[18] * d[24] * d[54] - d[19] * d[25] * d[54] - d[16] * d[26] * d[54] - d[17] * d[27] * d[54] + d[16] * d[20] * d[57] + d[17] * d[21] * d[57] - d[16] * d[18] * d[58] - d[17] * d[19] * d[58];
	coeffs[166] = d[4] * d[24] * d[33] + d[5] * d[25] * d[33] + d[0] * d[28] * d[33] + d[1] * d[29] * d[33] - d[2] * d[24] * d[34] - d[3] * d[25] * d[34] - d[0] * d[26] * d[34] - d[1] * d[27] * d[34] + d[0] * d[4] * d[61] + d[1] * d[5] * d[61] - d[0] * d[2] * d[62] - d[1] * d[3] * d[62];
	coeffs[167] = d[12] * d[24] * d[33] + d[13] * d[25] * d[33] + d[8] * d[28] * d[33] + d[9] * d[29] * d[33] - d[10] * d[24] * d[34] - d[11] * d[25] * d[34] - d[8] * d[26] * d[34] - d[9] * d[27] * d[34] + d[4] * d[24] * d[37] + d[5] * d[25] * d[37] + d[0] * d[28] * d[37] + d[1] * d[29] * d[37] - d[2] * d[24] * d[38] - d[3] * d[25] * d[38] - d[0] * d[26] * d[38] - d[1] * d[27] * d[38] + d[4] * d[8] * d[61] + d[5] * d[9] * d[61] + d[0] * d[12] * d[61] + d[1] * d[13] * d[61] - d[2] * d[8] * d[62] - d[3] * d[9] * d[62] - d[0] * d[10] * d[62] - d[1] * d[11] * d[62];
	coeffs[168] = d[12] * d[24] * d[37] + d[13] * d[25] * d[37] + d[8] * d[28] * d[37] + d[9] * d[29] * d[37] - d[10] * d[24] * d[38] - d[11] * d[25] * d[38] - d[8] * d[26] * d[38] - d[9] * d[27] * d[38] + d[8] * d[12] * d[61] + d[9] * d[13] * d[61] - d[8] * d[10] * d[62] - d[9] * d[11] * d[62];
	coeffs[169] = d[20] * d[24] * d[33] + d[21] * d[25] * d[33] + d[16] * d[28] * d[33] + d[17] * d[29] * d[33] - d[18] * d[24] * d[34] - d[19] * d[25] * d[34] - d[16] * d[26] * d[34] - d[17] * d[27] * d[34] + d[4] * d[24] * d[41] + d[5] * d[25] * d[41] + d[0] * d[28] * d[41] + d[1] * d[29] * d[41] - d[2] * d[24] * d[42] - d[3] * d[25] * d[42] - d[0] * d[26] * d[42] - d[1] * d[27] * d[42] + d[4] * d[16] * d[61] + d[5] * d[17] * d[61] + d[0] * d[20] * d[61] + d[1] * d[21] * d[61] - d[2] * d[16] * d[62] - d[3] * d[17] * d[62] - d[0] * d[18] * d[62] - d[1] * d[19] * d[62];
	coeffs[170] = d[20] * d[24] * d[37] + d[21] * d[25] * d[37] + d[16] * d[28] * d[37] + d[17] * d[29] * d[37] - d[18] * d[24] * d[38] - d[19] * d[25] * d[38] - d[16] * d[26] * d[38] - d[17] * d[27] * d[38] + d[12] * d[24] * d[41] + d[13] * d[25] * d[41] + d[8] * d[28] * d[41] + d[9] * d[29] * d[41] - d[10] * d[24] * d[42] - d[11] * d[25] * d[42] - d[8] * d[26] * d[42] - d[9] * d[27] * d[42] + d[12] * d[16] * d[61] + d[13] * d[17] * d[61] + d[8] * d[20] * d[61] + d[9] * d[21] * d[61] - d[10] * d[16] * d[62] - d[11] * d[17] * d[62] - d[8] * d[18] * d[62] - d[9] * d[19] * d[62];
	coeffs[171] = d[20] * d[24] * d[41] + d[21] * d[25] * d[41] + d[16] * d[28] * d[41] + d[17] * d[29] * d[41] - d[18] * d[24] * d[42] - d[19] * d[25] * d[42] - d[16] * d[26] * d[42] - d[17] * d[27] * d[42] + d[16] * d[20] * d[61] + d[17] * d[21] * d[61] - d[16] * d[18] * d[62] - d[17] * d[19] * d[62];
	coeffs[172] = d[24] * d[28] * d[45] + d[25] * d[29] * d[45] - d[24] * d[26] * d[46] - d[25] * d[27] * d[46] + d[4] * d[24] * d[57] + d[5] * d[25] * d[57] + d[0] * d[28] * d[57] + d[1] * d[29] * d[57] - d[2] * d[24] * d[58] - d[3] * d[25] * d[58] - d[0] * d[26] * d[58] - d[1] * d[27] * d[58];
	coeffs[173] = d[24] * d[28] * d[49] + d[25] * d[29] * d[49] - d[24] * d[26] * d[50] - d[25] * d[27] * d[50] + d[12] * d[24] * d[57] + d[13] * d[25] * d[57] + d[8] * d[28] * d[57] + d[9] * d[29] * d[57] - d[10] * d[24] * d[58] - d[11] * d[25] * d[58] - d[8] * d[26] * d[58] - d[9] * d[27] * d[58];
	coeffs[174] = d[24] * d[28] * d[53] + d[25] * d[29] * d[53] - d[24] * d[26] * d[54] - d[25] * d[27] * d[54] + d[20] * d[24] * d[57] + d[21] * d[25] * d[57] + d[16] * d[28] * d[57] + d[17] * d[29] * d[57] - d[18] * d[24] * d[58] - d[19] * d[25] * d[58] - d[16] * d[26] * d[58] - d[17] * d[27] * d[58];
	coeffs[175] = d[24] * d[28] * d[33] + d[25] * d[29] * d[33] - d[24] * d[26] * d[34] - d[25] * d[27] * d[34] + d[4] * d[24] * d[61] + d[5] * d[25] * d[61] + d[0] * d[28] * d[61] + d[1] * d[29] * d[61] - d[2] * d[24] * d[62] - d[3] * d[25] * d[62] - d[0] * d[26] * d[62] - d[1] * d[27] * d[62];
	coeffs[176] = d[24] * d[28] * d[37] + d[25] * d[29] * d[37] - d[24] * d[26] * d[38] - d[25] * d[27] * d[38] + d[12] * d[24] * d[61] + d[13] * d[25] * d[61] + d[8] * d[28] * d[61] + d[9] * d[29] * d[61] - d[10] * d[24] * d[62] - d[11] * d[25] * d[62] - d[8] * d[26] * d[62] - d[9] * d[27] * d[62];
	coeffs[177] = d[24] * d[28] * d[41] + d[25] * d[29] * d[41] - d[24] * d[26] * d[42] - d[25] * d[27] * d[42] + d[20] * d[24] * d[61] + d[21] * d[25] * d[61] + d[16] * d[28] * d[61] + d[17] * d[29] * d[61] - d[18] * d[24] * d[62] - d[19] * d[25] * d[62] - d[16] * d[26] * d[62] - d[17] * d[27] * d[62];
	coeffs[178] = d[24] * d[28] * d[57] + d[25] * d[29] * d[57] - d[24] * d[26] * d[58] - d[25] * d[27] * d[58];
	coeffs[179] = d[24] * d[28] * d[61] + d[25] * d[29] * d[61] - d[24] * d[26] * d[62] - d[25] * d[27] * d[62];
	coeffs[180] = -std::pow(d[3], 2) * d[44] + std::pow(d[4], 2) * d[44] + d[1] * d[3] * d[45] - d[0] * d[4] * d[46];
	coeffs[181] = -2 * d[3] * d[11] * d[44] + 2 * d[4] * d[12] * d[44] + d[3] * d[9] * d[45] + d[1] * d[11] * d[45] - d[4] * d[8] * d[46] - d[0] * d[12] * d[46] - std::pow(d[3], 2) * d[48] + std::pow(d[4], 2) * d[48] + d[1] * d[3] * d[49] - d[0] * d[4] * d[50];
	coeffs[182] = -std::pow(d[11], 2) * d[44] + std::pow(d[12], 2) * d[44] + d[9] * d[11] * d[45] - d[8] * d[12] * d[46] - 2 * d[3] * d[11] * d[48] + 2 * d[4] * d[12] * d[48] + d[3] * d[9] * d[49] + d[1] * d[11] * d[49] - d[4] * d[8] * d[50] - d[0] * d[12] * d[50];
	coeffs[183] = -std::pow(d[11], 2) * d[48] + std::pow(d[12], 2) * d[48] + d[9] * d[11] * d[49] - d[8] * d[12] * d[50];
	coeffs[184] = -2 * d[3] * d[19] * d[44] + 2 * d[4] * d[20] * d[44] + d[3] * d[17] * d[45] + d[1] * d[19] * d[45] - d[4] * d[16] * d[46] - d[0] * d[20] * d[46] - std::pow(d[3], 2) * d[52] + std::pow(d[4], 2) * d[52] + d[1] * d[3] * d[53] - d[0] * d[4] * d[54];
	coeffs[185] = -2 * d[11] * d[19] * d[44] + 2 * d[12] * d[20] * d[44] + d[11] * d[17] * d[45] + d[9] * d[19] * d[45] - d[12] * d[16] * d[46] - d[8] * d[20] * d[46] - 2 * d[3] * d[19] * d[48] + 2 * d[4] * d[20] * d[48] + d[3] * d[17] * d[49] + d[1] * d[19] * d[49] - d[4] * d[16] * d[50] - d[0] * d[20] * d[50] - 2 * d[3] * d[11] * d[52] + 2 * d[4] * d[12] * d[52] + d[3] * d[9] * d[53] + d[1] * d[11] * d[53] - d[4] * d[8] * d[54] - d[0] * d[12] * d[54];
	coeffs[186] = -2 * d[11] * d[19] * d[48] + 2 * d[12] * d[20] * d[48] + d[11] * d[17] * d[49] + d[9] * d[19] * d[49] - d[12] * d[16] * d[50] - d[8] * d[20] * d[50] - std::pow(d[11], 2) * d[52] + std::pow(d[12], 2) * d[52] + d[9] * d[11] * d[53] - d[8] * d[12] * d[54];
	coeffs[187] = -std::pow(d[19], 2) * d[44] + std::pow(d[20], 2) * d[44] + d[17] * d[19] * d[45] - d[16] * d[20] * d[46] - 2 * d[3] * d[19] * d[52] + 2 * d[4] * d[20] * d[52] + d[3] * d[17] * d[53] + d[1] * d[19] * d[53] - d[4] * d[16] * d[54] - d[0] * d[20] * d[54];
	coeffs[188] = -std::pow(d[19], 2) * d[48] + std::pow(d[20], 2) * d[48] + d[17] * d[19] * d[49] - d[16] * d[20] * d[50] - 2 * d[11] * d[19] * d[52] + 2 * d[12] * d[20] * d[52] + d[11] * d[17] * d[53] + d[9] * d[19] * d[53] - d[12] * d[16] * d[54] - d[8] * d[20] * d[54];
	coeffs[189] = -std::pow(d[19], 2) * d[52] + std::pow(d[20], 2) * d[52] + d[17] * d[19] * d[53] - d[16] * d[20] * d[54];
	coeffs[190] = -std::pow(d[3], 2) * d[32] + std::pow(d[4], 2) * d[32] + d[1] * d[3] * d[33] - d[0] * d[4] * d[34];
	coeffs[191] = -2 * d[3] * d[11] * d[32] + 2 * d[4] * d[12] * d[32] + d[3] * d[9] * d[33] + d[1] * d[11] * d[33] - d[4] * d[8] * d[34] - d[0] * d[12] * d[34] - std::pow(d[3], 2) * d[36] + std::pow(d[4], 2) * d[36] + d[1] * d[3] * d[37] - d[0] * d[4] * d[38];
	coeffs[192] = -std::pow(d[11], 2) * d[32] + std::pow(d[12], 2) * d[32] + d[9] * d[11] * d[33] - d[8] * d[12] * d[34] - 2 * d[3] * d[11] * d[36] + 2 * d[4] * d[12] * d[36] + d[3] * d[9] * d[37] + d[1] * d[11] * d[37] - d[4] * d[8] * d[38] - d[0] * d[12] * d[38];
	coeffs[193] = -std::pow(d[11], 2) * d[36] + std::pow(d[12], 2) * d[36] + d[9] * d[11] * d[37] - d[8] * d[12] * d[38];
	coeffs[194] = -2 * d[3] * d[19] * d[32] + 2 * d[4] * d[20] * d[32] + d[3] * d[17] * d[33] + d[1] * d[19] * d[33] - d[4] * d[16] * d[34] - d[0] * d[20] * d[34] - std::pow(d[3], 2) * d[40] + std::pow(d[4], 2) * d[40] + d[1] * d[3] * d[41] - d[0] * d[4] * d[42];
	coeffs[195] = -2 * d[11] * d[19] * d[32] + 2 * d[12] * d[20] * d[32] + d[11] * d[17] * d[33] + d[9] * d[19] * d[33] - d[12] * d[16] * d[34] - d[8] * d[20] * d[34] - 2 * d[3] * d[19] * d[36] + 2 * d[4] * d[20] * d[36] + d[3] * d[17] * d[37] + d[1] * d[19] * d[37] - d[4] * d[16] * d[38] - d[0] * d[20] * d[38] - 2 * d[3] * d[11] * d[40] + 2 * d[4] * d[12] * d[40] + d[3] * d[9] * d[41] + d[1] * d[11] * d[41] - d[4] * d[8] * d[42] - d[0] * d[12] * d[42];
	coeffs[196] = -2 * d[11] * d[19] * d[36] + 2 * d[12] * d[20] * d[36] + d[11] * d[17] * d[37] + d[9] * d[19] * d[37] - d[12] * d[16] * d[38] - d[8] * d[20] * d[38] - std::pow(d[11], 2) * d[40] + std::pow(d[12], 2) * d[40] + d[9] * d[11] * d[41] - d[8] * d[12] * d[42];
	coeffs[197] = -std::pow(d[19], 2) * d[32] + std::pow(d[20], 2) * d[32] + d[17] * d[19] * d[33] - d[16] * d[20] * d[34] - 2 * d[3] * d[19] * d[40] + 2 * d[4] * d[20] * d[40] + d[3] * d[17] * d[41] + d[1] * d[19] * d[41] - d[4] * d[16] * d[42] - d[0] * d[20] * d[42];
	coeffs[198] = -std::pow(d[19], 2) * d[36] + std::pow(d[20], 2) * d[36] + d[17] * d[19] * d[37] - d[16] * d[20] * d[38] - 2 * d[11] * d[19] * d[40] + 2 * d[12] * d[20] * d[40] + d[11] * d[17] * d[41] + d[9] * d[19] * d[41] - d[12] * d[16] * d[42] - d[8] * d[20] * d[42];
	coeffs[199] = -std::pow(d[19], 2) * d[40] + std::pow(d[20], 2) * d[40] + d[17] * d[19] * d[41] - d[16] * d[20] * d[42];
	coeffs[200] = -2 * d[3] * d[27] * d[44] + 2 * d[4] * d[28] * d[44] + d[3] * d[25] * d[45] + d[1] * d[27] * d[45] - d[4] * d[24] * d[46] - d[0] * d[28] * d[46] - std::pow(d[3], 2) * d[56] + std::pow(d[4], 2) * d[56] + d[1] * d[3] * d[57] - d[0] * d[4] * d[58];
	coeffs[201] = -2 * d[11] * d[27] * d[44] + 2 * d[12] * d[28] * d[44] + d[11] * d[25] * d[45] + d[9] * d[27] * d[45] - d[12] * d[24] * d[46] - d[8] * d[28] * d[46] - 2 * d[3] * d[27] * d[48] + 2 * d[4] * d[28] * d[48] + d[3] * d[25] * d[49] + d[1] * d[27] * d[49] - d[4] * d[24] * d[50] - d[0] * d[28] * d[50] - 2 * d[3] * d[11] * d[56] + 2 * d[4] * d[12] * d[56] + d[3] * d[9] * d[57] + d[1] * d[11] * d[57] - d[4] * d[8] * d[58] - d[0] * d[12] * d[58];
	coeffs[202] = -2 * d[11] * d[27] * d[48] + 2 * d[12] * d[28] * d[48] + d[11] * d[25] * d[49] + d[9] * d[27] * d[49] - d[12] * d[24] * d[50] - d[8] * d[28] * d[50] - std::pow(d[11], 2) * d[56] + std::pow(d[12], 2) * d[56] + d[9] * d[11] * d[57] - d[8] * d[12] * d[58];
	coeffs[203] = -2 * d[19] * d[27] * d[44] + 2 * d[20] * d[28] * d[44] + d[19] * d[25] * d[45] + d[17] * d[27] * d[45] - d[20] * d[24] * d[46] - d[16] * d[28] * d[46] - 2 * d[3] * d[27] * d[52] + 2 * d[4] * d[28] * d[52] + d[3] * d[25] * d[53] + d[1] * d[27] * d[53] - d[4] * d[24] * d[54] - d[0] * d[28] * d[54] - 2 * d[3] * d[19] * d[56] + 2 * d[4] * d[20] * d[56] + d[3] * d[17] * d[57] + d[1] * d[19] * d[57] - d[4] * d[16] * d[58] - d[0] * d[20] * d[58];
	coeffs[204] = -2 * d[19] * d[27] * d[48] + 2 * d[20] * d[28] * d[48] + d[19] * d[25] * d[49] + d[17] * d[27] * d[49] - d[20] * d[24] * d[50] - d[16] * d[28] * d[50] - 2 * d[11] * d[27] * d[52] + 2 * d[12] * d[28] * d[52] + d[11] * d[25] * d[53] + d[9] * d[27] * d[53] - d[12] * d[24] * d[54] - d[8] * d[28] * d[54] - 2 * d[11] * d[19] * d[56] + 2 * d[12] * d[20] * d[56] + d[11] * d[17] * d[57] + d[9] * d[19] * d[57] - d[12] * d[16] * d[58] - d[8] * d[20] * d[58];
	coeffs[205] = -2 * d[19] * d[27] * d[52] + 2 * d[20] * d[28] * d[52] + d[19] * d[25] * d[53] + d[17] * d[27] * d[53] - d[20] * d[24] * d[54] - d[16] * d[28] * d[54] - std::pow(d[19], 2) * d[56] + std::pow(d[20], 2) * d[56] + d[17] * d[19] * d[57] - d[16] * d[20] * d[58];
	coeffs[206] = -2 * d[3] * d[27] * d[32] + 2 * d[4] * d[28] * d[32] + d[3] * d[25] * d[33] + d[1] * d[27] * d[33] - d[4] * d[24] * d[34] - d[0] * d[28] * d[34] - std::pow(d[3], 2) * d[60] + std::pow(d[4], 2) * d[60] + d[1] * d[3] * d[61] - d[0] * d[4] * d[62];
	coeffs[207] = -2 * d[11] * d[27] * d[32] + 2 * d[12] * d[28] * d[32] + d[11] * d[25] * d[33] + d[9] * d[27] * d[33] - d[12] * d[24] * d[34] - d[8] * d[28] * d[34] - 2 * d[3] * d[27] * d[36] + 2 * d[4] * d[28] * d[36] + d[3] * d[25] * d[37] + d[1] * d[27] * d[37] - d[4] * d[24] * d[38] - d[0] * d[28] * d[38] - 2 * d[3] * d[11] * d[60] + 2 * d[4] * d[12] * d[60] + d[3] * d[9] * d[61] + d[1] * d[11] * d[61] - d[4] * d[8] * d[62] - d[0] * d[12] * d[62];
	coeffs[208] = -2 * d[11] * d[27] * d[36] + 2 * d[12] * d[28] * d[36] + d[11] * d[25] * d[37] + d[9] * d[27] * d[37] - d[12] * d[24] * d[38] - d[8] * d[28] * d[38] - std::pow(d[11], 2) * d[60] + std::pow(d[12], 2) * d[60] + d[9] * d[11] * d[61] - d[8] * d[12] * d[62];
	coeffs[209] = -2 * d[19] * d[27] * d[32] + 2 * d[20] * d[28] * d[32] + d[19] * d[25] * d[33] + d[17] * d[27] * d[33] - d[20] * d[24] * d[34] - d[16] * d[28] * d[34] - 2 * d[3] * d[27] * d[40] + 2 * d[4] * d[28] * d[40] + d[3] * d[25] * d[41] + d[1] * d[27] * d[41] - d[4] * d[24] * d[42] - d[0] * d[28] * d[42] - 2 * d[3] * d[19] * d[60] + 2 * d[4] * d[20] * d[60] + d[3] * d[17] * d[61] + d[1] * d[19] * d[61] - d[4] * d[16] * d[62] - d[0] * d[20] * d[62];
	coeffs[210] = -2 * d[19] * d[27] * d[36] + 2 * d[20] * d[28] * d[36] + d[19] * d[25] * d[37] + d[17] * d[27] * d[37] - d[20] * d[24] * d[38] - d[16] * d[28] * d[38] - 2 * d[11] * d[27] * d[40] + 2 * d[12] * d[28] * d[40] + d[11] * d[25] * d[41] + d[9] * d[27] * d[41] - d[12] * d[24] * d[42] - d[8] * d[28] * d[42] - 2 * d[11] * d[19] * d[60] + 2 * d[12] * d[20] * d[60] + d[11] * d[17] * d[61] + d[9] * d[19] * d[61] - d[12] * d[16] * d[62] - d[8] * d[20] * d[62];
	coeffs[211] = -2 * d[19] * d[27] * d[40] + 2 * d[20] * d[28] * d[40] + d[19] * d[25] * d[41] + d[17] * d[27] * d[41] - d[20] * d[24] * d[42] - d[16] * d[28] * d[42] - std::pow(d[19], 2) * d[60] + std::pow(d[20], 2) * d[60] + d[17] * d[19] * d[61] - d[16] * d[20] * d[62];
	coeffs[212] = -std::pow(d[27], 2) * d[44] + std::pow(d[28], 2) * d[44] + d[25] * d[27] * d[45] - d[24] * d[28] * d[46] - 2 * d[3] * d[27] * d[56] + 2 * d[4] * d[28] * d[56] + d[3] * d[25] * d[57] + d[1] * d[27] * d[57] - d[4] * d[24] * d[58] - d[0] * d[28] * d[58];
	coeffs[213] = -std::pow(d[27], 2) * d[48] + std::pow(d[28], 2) * d[48] + d[25] * d[27] * d[49] - d[24] * d[28] * d[50] - 2 * d[11] * d[27] * d[56] + 2 * d[12] * d[28] * d[56] + d[11] * d[25] * d[57] + d[9] * d[27] * d[57] - d[12] * d[24] * d[58] - d[8] * d[28] * d[58];
	coeffs[214] = -std::pow(d[27], 2) * d[52] + std::pow(d[28], 2) * d[52] + d[25] * d[27] * d[53] - d[24] * d[28] * d[54] - 2 * d[19] * d[27] * d[56] + 2 * d[20] * d[28] * d[56] + d[19] * d[25] * d[57] + d[17] * d[27] * d[57] - d[20] * d[24] * d[58] - d[16] * d[28] * d[58];
	coeffs[215] = -std::pow(d[27], 2) * d[32] + std::pow(d[28], 2) * d[32] + d[25] * d[27] * d[33] - d[24] * d[28] * d[34] - 2 * d[3] * d[27] * d[60] + 2 * d[4] * d[28] * d[60] + d[3] * d[25] * d[61] + d[1] * d[27] * d[61] - d[4] * d[24] * d[62] - d[0] * d[28] * d[62];
	coeffs[216] = -std::pow(d[27], 2) * d[36] + std::pow(d[28], 2) * d[36] + d[25] * d[27] * d[37] - d[24] * d[28] * d[38] - 2 * d[11] * d[27] * d[60] + 2 * d[12] * d[28] * d[60] + d[11] * d[25] * d[61] + d[9] * d[27] * d[61] - d[12] * d[24] * d[62] - d[8] * d[28] * d[62];
	coeffs[217] = -std::pow(d[27], 2) * d[40] + std::pow(d[28], 2) * d[40] + d[25] * d[27] * d[41] - d[24] * d[28] * d[42] - 2 * d[19] * d[27] * d[60] + 2 * d[20] * d[28] * d[60] + d[19] * d[25] * d[61] + d[17] * d[27] * d[61] - d[20] * d[24] * d[62] - d[16] * d[28] * d[62];
	coeffs[218] = -std::pow(d[27], 2) * d[56] + std::pow(d[28], 2) * d[56] + d[25] * d[27] * d[57] - d[24] * d[28] * d[58];
	coeffs[219] = -std::pow(d[27], 2) * d[60] + std::pow(d[28], 2) * d[60] + d[25] * d[27] * d[61] - d[24] * d[28] * d[62];
	coeffs[220] = d[2] * d[4] * d[44] + d[3] * d[5] * d[44] - d[0] * d[2] * d[46] - d[1] * d[3] * d[46];
	coeffs[221] = d[4] * d[10] * d[44] + d[5] * d[11] * d[44] + d[2] * d[12] * d[44] + d[3] * d[13] * d[44] - d[2] * d[8] * d[46] - d[3] * d[9] * d[46] - d[0] * d[10] * d[46] - d[1] * d[11] * d[46] + d[2] * d[4] * d[48] + d[3] * d[5] * d[48] - d[0] * d[2] * d[50] - d[1] * d[3] * d[50];
	coeffs[222] = d[10] * d[12] * d[44] + d[11] * d[13] * d[44] - d[8] * d[10] * d[46] - d[9] * d[11] * d[46] + d[4] * d[10] * d[48] + d[5] * d[11] * d[48] + d[2] * d[12] * d[48] + d[3] * d[13] * d[48] - d[2] * d[8] * d[50] - d[3] * d[9] * d[50] - d[0] * d[10] * d[50] - d[1] * d[11] * d[50];
	coeffs[223] = d[10] * d[12] * d[48] + d[11] * d[13] * d[48] - d[8] * d[10] * d[50] - d[9] * d[11] * d[50];
	coeffs[224] = d[4] * d[18] * d[44] + d[5] * d[19] * d[44] + d[2] * d[20] * d[44] + d[3] * d[21] * d[44] - d[2] * d[16] * d[46] - d[3] * d[17] * d[46] - d[0] * d[18] * d[46] - d[1] * d[19] * d[46] + d[2] * d[4] * d[52] + d[3] * d[5] * d[52] - d[0] * d[2] * d[54] - d[1] * d[3] * d[54];
	coeffs[225] = d[12] * d[18] * d[44] + d[13] * d[19] * d[44] + d[10] * d[20] * d[44] + d[11] * d[21] * d[44] - d[10] * d[16] * d[46] - d[11] * d[17] * d[46] - d[8] * d[18] * d[46] - d[9] * d[19] * d[46] + d[4] * d[18] * d[48] + d[5] * d[19] * d[48] + d[2] * d[20] * d[48] + d[3] * d[21] * d[48] - d[2] * d[16] * d[50] - d[3] * d[17] * d[50] - d[0] * d[18] * d[50] - d[1] * d[19] * d[50] + d[4] * d[10] * d[52] + d[5] * d[11] * d[52] + d[2] * d[12] * d[52] + d[3] * d[13] * d[52] - d[2] * d[8] * d[54] - d[3] * d[9] * d[54] - d[0] * d[10] * d[54] - d[1] * d[11] * d[54];
	coeffs[226] = d[12] * d[18] * d[48] + d[13] * d[19] * d[48] + d[10] * d[20] * d[48] + d[11] * d[21] * d[48] - d[10] * d[16] * d[50] - d[11] * d[17] * d[50] - d[8] * d[18] * d[50] - d[9] * d[19] * d[50] + d[10] * d[12] * d[52] + d[11] * d[13] * d[52] - d[8] * d[10] * d[54] - d[9] * d[11] * d[54];
	coeffs[227] = d[18] * d[20] * d[44] + d[19] * d[21] * d[44] - d[16] * d[18] * d[46] - d[17] * d[19] * d[46] + d[4] * d[18] * d[52] + d[5] * d[19] * d[52] + d[2] * d[20] * d[52] + d[3] * d[21] * d[52] - d[2] * d[16] * d[54] - d[3] * d[17] * d[54] - d[0] * d[18] * d[54] - d[1] * d[19] * d[54];
	coeffs[228] = d[18] * d[20] * d[48] + d[19] * d[21] * d[48] - d[16] * d[18] * d[50] - d[17] * d[19] * d[50] + d[12] * d[18] * d[52] + d[13] * d[19] * d[52] + d[10] * d[20] * d[52] + d[11] * d[21] * d[52] - d[10] * d[16] * d[54] - d[11] * d[17] * d[54] - d[8] * d[18] * d[54] - d[9] * d[19] * d[54];
	coeffs[229] = d[18] * d[20] * d[52] + d[19] * d[21] * d[52] - d[16] * d[18] * d[54] - d[17] * d[19] * d[54];
	coeffs[230] = d[2] * d[4] * d[32] + d[3] * d[5] * d[32] - d[0] * d[2] * d[34] - d[1] * d[3] * d[34];
	coeffs[231] = d[4] * d[10] * d[32] + d[5] * d[11] * d[32] + d[2] * d[12] * d[32] + d[3] * d[13] * d[32] - d[2] * d[8] * d[34] - d[3] * d[9] * d[34] - d[0] * d[10] * d[34] - d[1] * d[11] * d[34] + d[2] * d[4] * d[36] + d[3] * d[5] * d[36] - d[0] * d[2] * d[38] - d[1] * d[3] * d[38];
	coeffs[232] = d[10] * d[12] * d[32] + d[11] * d[13] * d[32] - d[8] * d[10] * d[34] - d[9] * d[11] * d[34] + d[4] * d[10] * d[36] + d[5] * d[11] * d[36] + d[2] * d[12] * d[36] + d[3] * d[13] * d[36] - d[2] * d[8] * d[38] - d[3] * d[9] * d[38] - d[0] * d[10] * d[38] - d[1] * d[11] * d[38];
	coeffs[233] = d[10] * d[12] * d[36] + d[11] * d[13] * d[36] - d[8] * d[10] * d[38] - d[9] * d[11] * d[38];
	coeffs[234] = d[4] * d[18] * d[32] + d[5] * d[19] * d[32] + d[2] * d[20] * d[32] + d[3] * d[21] * d[32] - d[2] * d[16] * d[34] - d[3] * d[17] * d[34] - d[0] * d[18] * d[34] - d[1] * d[19] * d[34] + d[2] * d[4] * d[40] + d[3] * d[5] * d[40] - d[0] * d[2] * d[42] - d[1] * d[3] * d[42];
	coeffs[235] = d[12] * d[18] * d[32] + d[13] * d[19] * d[32] + d[10] * d[20] * d[32] + d[11] * d[21] * d[32] - d[10] * d[16] * d[34] - d[11] * d[17] * d[34] - d[8] * d[18] * d[34] - d[9] * d[19] * d[34] + d[4] * d[18] * d[36] + d[5] * d[19] * d[36] + d[2] * d[20] * d[36] + d[3] * d[21] * d[36] - d[2] * d[16] * d[38] - d[3] * d[17] * d[38] - d[0] * d[18] * d[38] - d[1] * d[19] * d[38] + d[4] * d[10] * d[40] + d[5] * d[11] * d[40] + d[2] * d[12] * d[40] + d[3] * d[13] * d[40] - d[2] * d[8] * d[42] - d[3] * d[9] * d[42] - d[0] * d[10] * d[42] - d[1] * d[11] * d[42];
	coeffs[236] = d[12] * d[18] * d[36] + d[13] * d[19] * d[36] + d[10] * d[20] * d[36] + d[11] * d[21] * d[36] - d[10] * d[16] * d[38] - d[11] * d[17] * d[38] - d[8] * d[18] * d[38] - d[9] * d[19] * d[38] + d[10] * d[12] * d[40] + d[11] * d[13] * d[40] - d[8] * d[10] * d[42] - d[9] * d[11] * d[42];
	coeffs[237] = d[18] * d[20] * d[32] + d[19] * d[21] * d[32] - d[16] * d[18] * d[34] - d[17] * d[19] * d[34] + d[4] * d[18] * d[40] + d[5] * d[19] * d[40] + d[2] * d[20] * d[40] + d[3] * d[21] * d[40] - d[2] * d[16] * d[42] - d[3] * d[17] * d[42] - d[0] * d[18] * d[42] - d[1] * d[19] * d[42];
	coeffs[238] = d[18] * d[20] * d[36] + d[19] * d[21] * d[36] - d[16] * d[18] * d[38] - d[17] * d[19] * d[38] + d[12] * d[18] * d[40] + d[13] * d[19] * d[40] + d[10] * d[20] * d[40] + d[11] * d[21] * d[40] - d[10] * d[16] * d[42] - d[11] * d[17] * d[42] - d[8] * d[18] * d[42] - d[9] * d[19] * d[42];
	coeffs[239] = d[18] * d[20] * d[40] + d[19] * d[21] * d[40] - d[16] * d[18] * d[42] - d[17] * d[19] * d[42];
	coeffs[240] = d[4] * d[26] * d[44] + d[5] * d[27] * d[44] + d[2] * d[28] * d[44] + d[3] * d[29] * d[44] - d[2] * d[24] * d[46] - d[3] * d[25] * d[46] - d[0] * d[26] * d[46] - d[1] * d[27] * d[46] + d[2] * d[4] * d[56] + d[3] * d[5] * d[56] - d[0] * d[2] * d[58] - d[1] * d[3] * d[58];
	coeffs[241] = d[12] * d[26] * d[44] + d[13] * d[27] * d[44] + d[10] * d[28] * d[44] + d[11] * d[29] * d[44] - d[10] * d[24] * d[46] - d[11] * d[25] * d[46] - d[8] * d[26] * d[46] - d[9] * d[27] * d[46] + d[4] * d[26] * d[48] + d[5] * d[27] * d[48] + d[2] * d[28] * d[48] + d[3] * d[29] * d[48] - d[2] * d[24] * d[50] - d[3] * d[25] * d[50] - d[0] * d[26] * d[50] - d[1] * d[27] * d[50] + d[4] * d[10] * d[56] + d[5] * d[11] * d[56] + d[2] * d[12] * d[56] + d[3] * d[13] * d[56] - d[2] * d[8] * d[58] - d[3] * d[9] * d[58] - d[0] * d[10] * d[58] - d[1] * d[11] * d[58];
	coeffs[242] = d[12] * d[26] * d[48] + d[13] * d[27] * d[48] + d[10] * d[28] * d[48] + d[11] * d[29] * d[48] - d[10] * d[24] * d[50] - d[11] * d[25] * d[50] - d[8] * d[26] * d[50] - d[9] * d[27] * d[50] + d[10] * d[12] * d[56] + d[11] * d[13] * d[56] - d[8] * d[10] * d[58] - d[9] * d[11] * d[58];
	coeffs[243] = d[20] * d[26] * d[44] + d[21] * d[27] * d[44] + d[18] * d[28] * d[44] + d[19] * d[29] * d[44] - d[18] * d[24] * d[46] - d[19] * d[25] * d[46] - d[16] * d[26] * d[46] - d[17] * d[27] * d[46] + d[4] * d[26] * d[52] + d[5] * d[27] * d[52] + d[2] * d[28] * d[52] + d[3] * d[29] * d[52] - d[2] * d[24] * d[54] - d[3] * d[25] * d[54] - d[0] * d[26] * d[54] - d[1] * d[27] * d[54] + d[4] * d[18] * d[56] + d[5] * d[19] * d[56] + d[2] * d[20] * d[56] + d[3] * d[21] * d[56] - d[2] * d[16] * d[58] - d[3] * d[17] * d[58] - d[0] * d[18] * d[58] - d[1] * d[19] * d[58];
	coeffs[244] = d[20] * d[26] * d[48] + d[21] * d[27] * d[48] + d[18] * d[28] * d[48] + d[19] * d[29] * d[48] - d[18] * d[24] * d[50] - d[19] * d[25] * d[50] - d[16] * d[26] * d[50] - d[17] * d[27] * d[50] + d[12] * d[26] * d[52] + d[13] * d[27] * d[52] + d[10] * d[28] * d[52] + d[11] * d[29] * d[52] - d[10] * d[24] * d[54] - d[11] * d[25] * d[54] - d[8] * d[26] * d[54] - d[9] * d[27] * d[54] + d[12] * d[18] * d[56] + d[13] * d[19] * d[56] + d[10] * d[20] * d[56] + d[11] * d[21] * d[56] - d[10] * d[16] * d[58] - d[11] * d[17] * d[58] - d[8] * d[18] * d[58] - d[9] * d[19] * d[58];
	coeffs[245] = d[20] * d[26] * d[52] + d[21] * d[27] * d[52] + d[18] * d[28] * d[52] + d[19] * d[29] * d[52] - d[18] * d[24] * d[54] - d[19] * d[25] * d[54] - d[16] * d[26] * d[54] - d[17] * d[27] * d[54] + d[18] * d[20] * d[56] + d[19] * d[21] * d[56] - d[16] * d[18] * d[58] - d[17] * d[19] * d[58];
	coeffs[246] = d[4] * d[26] * d[32] + d[5] * d[27] * d[32] + d[2] * d[28] * d[32] + d[3] * d[29] * d[32] - d[2] * d[24] * d[34] - d[3] * d[25] * d[34] - d[0] * d[26] * d[34] - d[1] * d[27] * d[34] + d[2] * d[4] * d[60] + d[3] * d[5] * d[60] - d[0] * d[2] * d[62] - d[1] * d[3] * d[62];
	coeffs[247] = d[12] * d[26] * d[32] + d[13] * d[27] * d[32] + d[10] * d[28] * d[32] + d[11] * d[29] * d[32] - d[10] * d[24] * d[34] - d[11] * d[25] * d[34] - d[8] * d[26] * d[34] - d[9] * d[27] * d[34] + d[4] * d[26] * d[36] + d[5] * d[27] * d[36] + d[2] * d[28] * d[36] + d[3] * d[29] * d[36] - d[2] * d[24] * d[38] - d[3] * d[25] * d[38] - d[0] * d[26] * d[38] - d[1] * d[27] * d[38] + d[4] * d[10] * d[60] + d[5] * d[11] * d[60] + d[2] * d[12] * d[60] + d[3] * d[13] * d[60] - d[2] * d[8] * d[62] - d[3] * d[9] * d[62] - d[0] * d[10] * d[62] - d[1] * d[11] * d[62];
	coeffs[248] = d[12] * d[26] * d[36] + d[13] * d[27] * d[36] + d[10] * d[28] * d[36] + d[11] * d[29] * d[36] - d[10] * d[24] * d[38] - d[11] * d[25] * d[38] - d[8] * d[26] * d[38] - d[9] * d[27] * d[38] + d[10] * d[12] * d[60] + d[11] * d[13] * d[60] - d[8] * d[10] * d[62] - d[9] * d[11] * d[62];
	coeffs[249] = d[20] * d[26] * d[32] + d[21] * d[27] * d[32] + d[18] * d[28] * d[32] + d[19] * d[29] * d[32] - d[18] * d[24] * d[34] - d[19] * d[25] * d[34] - d[16] * d[26] * d[34] - d[17] * d[27] * d[34] + d[4] * d[26] * d[40] + d[5] * d[27] * d[40] + d[2] * d[28] * d[40] + d[3] * d[29] * d[40] - d[2] * d[24] * d[42] - d[3] * d[25] * d[42] - d[0] * d[26] * d[42] - d[1] * d[27] * d[42] + d[4] * d[18] * d[60] + d[5] * d[19] * d[60] + d[2] * d[20] * d[60] + d[3] * d[21] * d[60] - d[2] * d[16] * d[62] - d[3] * d[17] * d[62] - d[0] * d[18] * d[62] - d[1] * d[19] * d[62];
	coeffs[250] = d[20] * d[26] * d[36] + d[21] * d[27] * d[36] + d[18] * d[28] * d[36] + d[19] * d[29] * d[36] - d[18] * d[24] * d[38] - d[19] * d[25] * d[38] - d[16] * d[26] * d[38] - d[17] * d[27] * d[38] + d[12] * d[26] * d[40] + d[13] * d[27] * d[40] + d[10] * d[28] * d[40] + d[11] * d[29] * d[40] - d[10] * d[24] * d[42] - d[11] * d[25] * d[42] - d[8] * d[26] * d[42] - d[9] * d[27] * d[42] + d[12] * d[18] * d[60] + d[13] * d[19] * d[60] + d[10] * d[20] * d[60] + d[11] * d[21] * d[60] - d[10] * d[16] * d[62] - d[11] * d[17] * d[62] - d[8] * d[18] * d[62] - d[9] * d[19] * d[62];
	coeffs[251] = d[20] * d[26] * d[40] + d[21] * d[27] * d[40] + d[18] * d[28] * d[40] + d[19] * d[29] * d[40] - d[18] * d[24] * d[42] - d[19] * d[25] * d[42] - d[16] * d[26] * d[42] - d[17] * d[27] * d[42] + d[18] * d[20] * d[60] + d[19] * d[21] * d[60] - d[16] * d[18] * d[62] - d[17] * d[19] * d[62];
	coeffs[252] = d[26] * d[28] * d[44] + d[27] * d[29] * d[44] - d[24] * d[26] * d[46] - d[25] * d[27] * d[46] + d[4] * d[26] * d[56] + d[5] * d[27] * d[56] + d[2] * d[28] * d[56] + d[3] * d[29] * d[56] - d[2] * d[24] * d[58] - d[3] * d[25] * d[58] - d[0] * d[26] * d[58] - d[1] * d[27] * d[58];
	coeffs[253] = d[26] * d[28] * d[48] + d[27] * d[29] * d[48] - d[24] * d[26] * d[50] - d[25] * d[27] * d[50] + d[12] * d[26] * d[56] + d[13] * d[27] * d[56] + d[10] * d[28] * d[56] + d[11] * d[29] * d[56] - d[10] * d[24] * d[58] - d[11] * d[25] * d[58] - d[8] * d[26] * d[58] - d[9] * d[27] * d[58];
	coeffs[254] = d[26] * d[28] * d[52] + d[27] * d[29] * d[52] - d[24] * d[26] * d[54] - d[25] * d[27] * d[54] + d[20] * d[26] * d[56] + d[21] * d[27] * d[56] + d[18] * d[28] * d[56] + d[19] * d[29] * d[56] - d[18] * d[24] * d[58] - d[19] * d[25] * d[58] - d[16] * d[26] * d[58] - d[17] * d[27] * d[58];
	coeffs[255] = d[26] * d[28] * d[32] + d[27] * d[29] * d[32] - d[24] * d[26] * d[34] - d[25] * d[27] * d[34] + d[4] * d[26] * d[60] + d[5] * d[27] * d[60] + d[2] * d[28] * d[60] + d[3] * d[29] * d[60] - d[2] * d[24] * d[62] - d[3] * d[25] * d[62] - d[0] * d[26] * d[62] - d[1] * d[27] * d[62];
	coeffs[256] = d[26] * d[28] * d[36] + d[27] * d[29] * d[36] - d[24] * d[26] * d[38] - d[25] * d[27] * d[38] + d[12] * d[26] * d[60] + d[13] * d[27] * d[60] + d[10] * d[28] * d[60] + d[11] * d[29] * d[60] - d[10] * d[24] * d[62] - d[11] * d[25] * d[62] - d[8] * d[26] * d[62] - d[9] * d[27] * d[62];
	coeffs[257] = d[26] * d[28] * d[40] + d[27] * d[29] * d[40] - d[24] * d[26] * d[42] - d[25] * d[27] * d[42] + d[20] * d[26] * d[60] + d[21] * d[27] * d[60] + d[18] * d[28] * d[60] + d[19] * d[29] * d[60] - d[18] * d[24] * d[62] - d[19] * d[25] * d[62] - d[16] * d[26] * d[62] - d[17] * d[27] * d[62];
	coeffs[258] = d[26] * d[28] * d[56] + d[27] * d[29] * d[56] - d[24] * d[26] * d[58] - d[25] * d[27] * d[58];
	coeffs[259] = d[26] * d[28] * d[60] + d[27] * d[29] * d[60] - d[24] * d[26] * d[62] - d[25] * d[27] * d[62];


	// Setup elimination template	
	Eigen::Matrix<double, 28, 28> C0; C0.setZero();
	Eigen::Matrix<double, 28, 12> C1; C1.setZero();
	for (int i = 0; i < 351; i++) { C0(C0_ind[i]) = coeffs[coeffs0_ind[i]]; }
	for (int i = 0; i < 159; i++) { C1(C1_ind[i]) = coeffs[coeffs1_ind[i]]; }
	Eigen::Matrix<double, 28, 12> C12 = C0.partialPivLu().solve(C1);
	

	// Setup action matrix
	Eigen::Matrix<double, 19, 12> RR;
	RR << -C12.bottomRows(7), Eigen::Matrix<double, 12, 12>::Identity(12, 12);
	Eigen::Matrix<double, 12, 12> AM;
	for (int i = 0; i < 12; i++) {
		AM.row(i) = RR.row(AM_ind[i]);
	}


	// Solve eigenvalue problem
	Eigen::EigenSolver<Eigen::Matrix<double, 12, 12> > es(AM, true);
	Eigen::Array<std::complex<double>, 12, 1> D = es.eigenvalues();
	Eigen::Array<std::complex<double>, 12, 12> V = es.eigenvectors().array();
	Eigen::Array<std::complex<double>, 1, 12> scale = V.row(11);	
	
	// Extract solutions from eigenvectors/values
	Eigen::Matrix<std::complex<double>, 4, 12> sols;
	sols.setZero();
	sols.row(0).array() = V.row(7).array() / scale;
	sols.row(1).array() = D.transpose().array();
	sols.row(2).array() = V.row(9).array() / scale;
	sols.row(3).array() = V.row(10).array() / scale;

	// Compute poses from solutions
	for (int i = 0; i < 12; ++i) {
		if (std::abs(D(i).imag()) > SMALL_NUMBER)
			continue;

		Eigen::Matrix<double, 3, 4> P;
		double lambda = sols(3, i).real();
		Eigen::Vector4d alpha;
		alpha << sols(0, i).real(), sols(1, i).real(), sols(2, i).real(), 1.0;		
		Eigen::Matrix<double, 8, 1> P12 = N * alpha;
		Eigen::Matrix<double, 8, 1> v;
		v << alpha.block<3, 1>(0, 0), lambda * alpha.block<3, 1>(0, 0), lambda, 1.0;		
		P.block<2, 4>(0, 0) = Eigen::Map<Eigen::Matrix<double, 2, 4>>(P12.data());		
		P.row(2) = B * v;

		if (P.block<3, 3>(0, 0).determinant() < 0)
			P = -P;

		P = P / P.block<1, 3>(2, 0).norm();
		double focal = P.block<1, 3>(0, 0).norm();
		P.row(0) = P.row(0) / focal;
		P.row(1) = P.row(1) / focal;

		Camera p;
		p.R = P.block<3, 3>(0, 0);
		p.t = P.block<3, 1>(0, 3);
		p.focal = focal;
		p.dist_params.push_back(lambda * (focal*focal));

		poses->push_back(p);
	}
	
	return poses->size();
}

template class radialpose::PoseEstimator<radialpose::larsson_iccv17::NonPlanarSolver>;